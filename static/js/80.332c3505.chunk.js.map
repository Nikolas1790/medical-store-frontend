{"version":3,"file":"static/js/80.332c3505.chunk.js","mappings":"2MAAaA,EAAgB,SAACC,GAAK,OAAKA,EAAMC,SAASC,YAAa,E,+ECGtDC,EAAiBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAK3BC,EAAiBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6LAMnBG,EAAAA,EAAAA,uB,UCETC,EAA+BN,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,syDAa9BG,EAAAA,EAAAA,MAIXA,EAAAA,EAAAA,mBAakBA,EAAAA,EAAAA,sBAQbA,EAAAA,EAAAA,MAYaA,EAAAA,EAAAA,uBAKlBE,GAAgBP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,CAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oFAK5B,SAAAO,GAAO,OAzEO,SAACC,GAE1B,OAAQA,GACN,IAAK,SACH,MAAO,QACT,IAAK,UACH,MAAO,MAET,QACE,MAAO,QAEb,CA8D2BC,CAAPF,EAAJC,KAAmC,I,SCnEpC,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAmBC,EAAAA,EAAAA,IAAYrB,GAA/BoB,gBAERE,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,KACX,GAAG,CAACL,IAGJ,IAAMM,EAAOJ,EAAiBA,EAAeK,KAAI,SAAAX,GAAA,IAAGY,EAAIZ,EAAJY,KAAMC,EAAMb,EAANa,OAAY,MAAO,CAAPb,EAAJC,KAAkBW,EAAMC,EAAO,IAAI,GAE/FC,EAAqB,SAACC,EAAUC,EAAUN,GAI9C,IAAIO,EAAQ,CAAC,EAIb,MAHiB,QAAbD,IACFC,EAAMC,eAAiB,aAGvBC,EAAAA,EAAAA,KAACrB,EAAa,CAACmB,MAAOA,EAAOhB,KAAMS,EAAKK,GAAUK,SAC/CV,EAAKK,IAGZ,EAEA,OACEM,EAAAA,EAAAA,MAAC3B,EAAc,CAAA0B,SAAA,EACbD,EAAAA,EAAAA,KAACG,EAAAA,GAAW,CAAAF,SAAC,qBACbD,EAAAA,EAAAA,KAACtB,EAA4B,CAAAuB,UAC3BC,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACLC,QAASd,EAAKe,OACdC,iBAAkB,GAClBC,aAAc,CAAC,IAAK,IAAK,IACzBC,sBAAsB,EACtBC,mBAAmB,EACnBC,iBAAiB,EAAMV,SAAA,EAEvBD,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACnB,KAAK,QAAQoB,aAAc,SAACjB,GAAQ,OAAKD,EAAmBC,EAAU,OAAQL,EAAKC,KAAI,SAAAsB,GAAI,OAAIA,EAAK,EAAE,IAAE,KAChHd,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACnB,KAAK,GAAGoB,aAAc,SAACjB,GAAQ,OAAKD,EAAmBC,EAAU,UAAWL,EAAKC,KAAI,SAAAsB,GAAI,OAAIA,EAAK,EAAE,IAAE,KAC9Gd,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACnB,KAAK,GAAGoB,aAAc,SAACjB,GAAQ,OAAKD,EAAmBC,EAAU,MAAOL,EAAKC,KAAI,SAAAsB,GAAI,OAAIA,EAAK,EAAE,IAAE,WAKpH,CCnDO,IAAMC,EAAc3C,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,i7BAcbG,EAAAA,EAAAA,MAKXA,EAAAA,EAAAA,mBAEkBA,EAAAA,EAAAA,sBASDA,EAAAA,EAAAA,sBAadA,EAAAA,EAAAA,MAKaA,EAAAA,EAAAA,uBCvCd,SAASuC,IACtB,IAAM/B,GAAWC,EAAAA,EAAAA,MACT+B,GAAoB7B,EAAAA,EAAAA,IAAYrB,GAAhCkD,iBAER5B,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,KACX,GAAG,CAACL,IAEJiC,QAAQC,IAAIF,GACZ,IAAM1B,EAAO0B,EAAkBA,EAAgBzB,KAAI,SAAAX,GAA4B,MAAO,CAA5BA,EAAJY,KAAWZ,EAALuC,MAAYvC,EAALwC,MAAYxC,EAALyC,MAAyC,IAAI,GAGjH3B,EAAqB,SAACC,EAAUC,EAAUN,GAC9C,IAAIO,EAAQ,CAAC,EAYb,MATiB,SAAbD,IACFC,EAAMyB,YAAc,OAEtBL,QAAQC,IAAI5B,GAEK,SAAbM,GAAoC,UAAbA,IACzBC,EAAM0B,YAAW,aAAAC,OAAgBhD,EAAAA,EAAAA,yBAIjCuB,EAAAA,EAAAA,KAACpB,EAAAA,EAAI,CAACkB,MAAOA,EAAMG,SACH,SAAbJ,GACCK,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EAEED,EAAAA,EAAAA,KAAA,OAAK0B,IAAI,GAAGC,IAAI,SAAS7B,MAAO,CAAE8B,MAAO,OAAQC,OAAQ,OAAQC,YAAa,UAC7EvC,EAAKK,MAIRL,EAAKK,IAKb,EA6BA,OACEM,EAAAA,EAAAA,MAAC3B,EAAc,CAAA0B,SAAA,EACbD,EAAAA,EAAAA,KAACG,EAAAA,GAAW,CAAAF,SAAC,sBAEbD,EAAAA,EAAAA,KAACe,EAAW,CAAAd,UACZC,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACLC,QAASd,EAAKe,OACdC,iBAAkB,GAClBC,aAAc,CAAC,IAAK,IAAK,KACzBC,sBAAsB,EACtBC,mBAAmB,EACnBC,iBAAiB,EAAMV,SAAA,EAEvBD,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACnB,KAAK,OAAOoB,aAAc,SAACjB,GAAQ,OAvC1B,SAACA,EAAUC,EAAUN,GAC1C,IAAIO,EAAQ,CAAC,EACPiC,EAAUxC,EAAKK,GAUrB,MAPiB,SAAbC,EACFC,EAAMyB,YAAc,MACE,UAAb1B,IACTC,EAAM0B,YAAW,aAAAC,OAAgBhD,EAAAA,EAAAA,wBAIlB,SAAboB,GAEAG,EAAAA,EAAAA,KAACpB,EAAAA,EAAI,CAACkB,MAAOA,EAAMG,UACjBC,EAAAA,EAAAA,MAAA,OAAKJ,MAAO,CAAEkC,QAAS,OAAQC,WAAY,UAAWhC,SAAA,EACpDD,EAAAA,EAAAA,KAAA,OAAK0B,IAAKK,EAAQ,GAAIJ,IAAKI,EAAQ,GAAIjC,MAAO,CAAE8B,MAAO,OAAQC,OAAQ,OAAQC,YAAa,WAC5F9B,EAAAA,EAAAA,KAAA,QAAAC,SAAO8B,EAAQ,WAMd/B,EAAAA,EAAAA,KAACpB,EAAAA,EAAI,CAACkB,MAAOA,EAAMG,SAAE8B,EAAQlC,IAExC,CAcsDqC,CAAetC,EAAU,OAAQL,EAAK,KACtFS,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACnB,KAAK,QAAQoB,aAAc,SAACjB,GAAQ,OAAKD,EAAmBC,EAAU,QAASL,EAAKC,KAAI,SAAAsB,GAAI,OAAIA,EAAK,EAAE,IAAE,KACjHd,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACnB,KAAK,QAAQoB,aAAc,SAACjB,GAAQ,OAAKD,EAAmBC,EAAU,QAASL,EAAKC,KAAI,SAAAsB,GAAI,OAAIA,EAAK,EAAE,IAAE,WAKzH,C,wBClGaqB,EAAqB/D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAK/B8D,EAAiBhE,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kOAIvBG,EAAAA,EAAAA,MACMA,EAAAA,EAAAA,sBAKVA,EAAAA,EAAAA,aAEQA,EAAAA,EAAAA,YAGP4D,EAA0BjE,EAAAA,GAAAA,IAAUkE,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,6FAQpCiE,EAAwBnE,EAAAA,GAAAA,GAASoE,IAAAA,GAAAlE,EAAAA,EAAAA,GAAA,qEAGnCG,EAAAA,EAAAA,oBAGEgE,EAAiBrE,EAAAA,GAAAA,EAAQsE,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,6EC9BvB,SAASqE,IACtB,IAAM1D,GAAWC,EAAAA,EAAAA,MACXK,GAAOH,EAAAA,EAAAA,IAAYrB,GAEnB6E,EAAY,CAChB,CAAEnD,KAAM,WAAYoD,KAAM,mBAAoBC,MAAM,GAADrB,OAAKlC,EAAKwD,gBAC7D,CAAEtD,KAAM,YAAaoD,KAAM,cAAeC,MAAM,GAADrB,OAAKlC,EAAKyD,iBACzD,CAAEvD,KAAM,YAAaoD,KAAM,cAAeC,MAAM,GAADrB,OAAKlC,EAAK0D,kBAM3D,OAJA5D,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,KACX,GAAG,CAACL,KAGFe,EAAAA,EAAAA,KAACmC,EAAkB,CAAAlC,SAChB2C,EAAUpD,KAAI,SAAA0D,GAAI,OACjBhD,EAAAA,EAAAA,MAACkC,EAAa,CAAAnC,SAAA,EACZC,EAAAA,EAAAA,MAACmC,EAAuB,CAAApC,SAAA,EACtBD,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,GAAIC,OAAQ,GAAG5B,UACzBD,EAAAA,EAAAA,KAAA,OAAKmD,KAAI,GAAA1B,OAAK2B,EAAAA,GAAM3B,OAAGyB,EAAKL,WAE9B3C,EAAAA,EAAAA,MAACqC,EAAqB,CAAAtC,SAAA,CAAC,OAAKiD,EAAKzD,YAEnCO,EAAAA,EAAAA,KAACyC,EAAc,CAAAxC,SAAEV,EAAK0D,eAAiBC,EAAKJ,MAAQ,MAPlCI,EAAKzD,KAQT,KAIxB,CC5Be,SAAS4D,IAEtB,OACErD,EAAAA,EAAAA,KAACsD,EAAAA,GAAgB,CAAArD,UACfC,EAAAA,EAAAA,MAACqD,EAAAA,GAAY,CAAAtD,SAAA,EACXD,EAAAA,EAAAA,KAAC2C,EAAkB,KAEnBzC,EAAAA,EAAAA,MAAC/B,EAAc,CAAA8B,SAAA,EACbD,EAAAA,EAAAA,KAACgB,EAAwB,KACzBhB,EAAAA,EAAAA,KAAChB,EAAuB,WAMlC,CCpBe,SAASwE,IACtB,OACExD,EAAAA,EAAAA,KAACqD,EAAS,GAEd,C","sources":["redux/ePharmacy/selector.js","components/Dashboard/Dashboard.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.jsx","components/DashboardRecentCustomers/DashboardRecentCustomers.styled.js","components/DashboardRecentCustomers/DashboardRecentCustomers.jsx","components/DashboardStatistic/DashboardStatistic.styled.js","components/DashboardStatistic/DashboardStatistic.jsx","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx"],"sourcesContent":["export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\n// export const selectTakeWaterHistory = (state) => state.water.history;\n\n// export const selectStageWater = (state) => state.water;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const  TableConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const  TableBlockItem = styled.div`\n\n  min-width: 630px;\n  height: 512px;\n  /* border: 1px solid red; */\n\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n  background: rgb(255, 255, 255);\n  overflow: hidden;\n`","import { Cell } from '@blueprintjs/table';\nimport color from 'common/GlobalColers'\nimport styled from 'styled-components'\nconst getBackgroundColor = (type) => {\n  // console.log(type)\n  switch (type) {\n    case 'Income':\n      return 'green';\n    case 'Expense':\n      return 'red';\n\n    default:\n      return 'black';\n  }\n};\n\nexport const IncomeExpensesTableConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n  .bp5-table-header {\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; \n  }\n  .bp5-table-column-name{\n    margin-left: -10px;\n  }\n\n  .bp5-table-header::after {\n    content: ''; /* Необходимо для отображения псевдоэлемента */\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n\n  .bp5-table-cell {  \n    position: relative; \n    display: flex;\n    align-items: center;\n    font-size: 16px;\n    background: ${color.white};\n    padding-left: 20px;\n    box-shadow: none; \n    padding: 0;\n\n  }\n  .bp5-table-cell::after {\n    content: ''; /* Необходимо для отображения псевдоэлемента */\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n`\n\n\nexport const CellConteiner = styled(Cell)`\n/* width: 80px;\nheight: 25px;\nbackground: red; */\n\n    color: ${({ type }) => getBackgroundColor(type)};\n\n`","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Column, Table2 } from \"@blueprintjs/table\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { CellConteiner, IncomeExpensesTableConteiner } from \"./DashboardIncomeExpenses.styled\";\n\nexport default function DashboardIncomeExpenses() {  \n  const dispatch = useDispatch();\n  const { incomeExpenses } = useSelector(selectDataInf);  \n\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  // console.log(incomeExpenses)\n  const data = incomeExpenses ? incomeExpenses.map(({ name, amount, type }) => [type, name, amount]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    // const type = data[rowIndex][0];\n// console.log(data)\n\n    let style = {};\n    if (columnId === 'sum') {\n      style.justifyContent = 'flex-end';\n    }  \n    return (\n      <CellConteiner style={style} type={data[rowIndex]}>\n        {data[rowIndex]}\n      </CellConteiner>\n    );\n  };\n  \n  return (\n    <TableBlockItem>\n      <TableHeader>Income/Expenses</TableHeader>\n      <IncomeExpensesTableConteiner>\n        <Table2 \n          numRows={data.length} \n          defaultRowHeight={65} \n          columnWidths={[120, 393, 77 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Today\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'type', data.map(item => item[0]))} />\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'details', data.map(item => item[1]))}/>\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'sum', data.map(item => item[2]))} />\n        </Table2>\n      </IncomeExpensesTableConteiner>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const HeaderStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n  .bp5-table-header {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n    padding-left: 10px;\n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; //\n    border-bottom: 1px solid ${color.blackPrimarySecondary};\n  }\n\n  .bp5-table-header:not(:last-child)::after {\n    content: ''; \n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0; \n    border-right: 1px solid ${color.blackPrimarySecondary}; \n  }\n  \n  .bp5-table-column-header-cell:first-child .bp5-table-column-name {\n    margin-left: -20px;\n  }\n\n\n\n\n .bp5-table-cell { \n  display: flex;\n  align-items: center;\n  background: ${color.white};\n  font-size: 16px;\n  font-weight: 500;\n  padding-left: 20px;\n  box-shadow: none; //\n  border-bottom: 1px solid ${color.blackPrimarySecondary};\n  \n}\n`","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { HotkeysProvider } from \"@blueprintjs/core\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { HeaderStyle } from \"./DashboardRecentCustomers.styled\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport color from \"common/GlobalColers\";\n\n\nexport default function DashboardRecentCustomers() {  \n  const dispatch = useDispatch();\n  const { recentCustomers } = useSelector(selectDataInf);  \n\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  console.log(recentCustomers)\n  const data = recentCustomers ? recentCustomers.map(({ name, email, spent, image }) => [ name, email, spent, image ]) : [];\n\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let style = {};\n\n    // Для столбца \"Name\" убираем паддинг\n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n    console.log(data)\n    // Для столбцов \"Name\" и \"Email\" добавляем границу справа\n    if (columnId === 'name' || columnId === 'email') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    return (\n      <Cell style={style}>\n        {columnId === 'name' ? (\n          <div>\n            {/* {console.log(data)} */}\n            <img src='' alt=\"ffffff\" style={{ width: '50px', height: '50px', marginRight: '10px' }} />\n            {data[rowIndex]}\n\n          </div>\n        ):(\n          data[rowIndex]\n        )}\n        {/* {data[rowIndex]} */}\n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n  \n    // Определяем стили для разных колонок, если это необходимо\n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    } else if (columnId === 'email') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    // Если это колонка с именем, возвращаем ячейку с изображением и именем\n    if (columnId === 'name') {\n      return (\n        <Cell style={style}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <img src={rowData[3]} alt={rowData[0]} style={{ width: '36px', height: '36px', marginRight: '10px' }} />\n            <span>{rowData[0]}</span>\n          </div>\n        </Cell>\n      );\n    } else {\n      // Для остальных колонок возвращаем обычное отображение\n      return <Cell style={style}>{rowData[columnId]}</Cell>;\n    }\n  };\n  return (    \n    <TableBlockItem>      \n      <TableHeader>Recent Customers</TableHeader>\n     \n      <HeaderStyle >\n      <Table2  \n        numRows={data.length} \n        defaultRowHeight={78} \n        columnWidths={[203, 269, 118 ]} \n        enableColumnResizing={false} \n        enableRowResizing={false} \n        enableRowHeader={false}\n      >\n        <Column name=\"Name\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n        <Column name=\"Email\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'email', data.map(item => item[1]))} />\n        <Column name=\"Spent\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'spent', data.map(item => item[2]))} />\n      </Table2>\n      </HeaderStyle>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StatisticConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const StatisticItem  = styled.li`\n  width: 240px;\n  height: 108px;\n  border-radius: 8px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  padding: 14px 18px;\n\n\n  fill: transparent;\n  stroke: ${color.blackPrimary};\n  &:first-child {\n    border-color: ${color.greenLight};\n  }\n`\nexport const StatisticTitleConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 28px;\n  \n`\n\nexport const StatisticSectionTitle = styled.h4`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.textColorSecondary};\n  \n`\nexport const StatisticValue = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.33;\n  \n`","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { StatisticConteiner, StatisticItem, StatisticSectionTitle, StatisticTitleConteiner, StatisticValue } from './DashboardStatistic.styled';\nimport { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\n\nexport default function DashboardStatistic() {  \n  const dispatch = useDispatch();\n  const data = useSelector(selectDataInf);\n  \n  const statistic = [\n    { name: \"products\", icon: \"#icon-streamline\", value: `${data.productsCount}` },\n    { name: \"suppliers\", icon: \"#icon-users\", value: `${data.suppliersCount}` },\n    { name: \"customers\", icon: \"#icon-users\", value: `${data.customersCount}` },\n  ];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  return (\n    <StatisticConteiner>\n      {statistic.map(link => (        \n        <StatisticItem key={link.name} >\n          <StatisticTitleConteiner>\n            <svg width={20} height={20}>\n              <use href={`${sprite}${link.icon}`} />\n            </svg>\n            <StatisticSectionTitle>All {link.name}</StatisticSectionTitle>\n          </StatisticTitleConteiner>\n          <StatisticValue>{data.customersCount ? link.value : 0}</StatisticValue>\n        </StatisticItem>\n      ))}\n    </StatisticConteiner>\n  );\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport DashboardIncomeExpenses from \"components/DashboardIncomeExpenses/DashboardIncomeExpenses\";\nimport DashboardRecentCustomers from \"components/DashboardRecentCustomers/DashboardRecentCustomers\";\nimport DashboardStatistic from \"components/DashboardStatistic/DashboardStatistic\";\nimport { TableConteiner } from \"./Dashboard.styled\";\n\n\nexport default function Dashboard() {  \n\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <DashboardStatistic />\n\n        <TableConteiner>\n          <DashboardRecentCustomers />\n          <DashboardIncomeExpenses />\n        </TableConteiner>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Dashboard from \"components/Dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return (\n    <Dashboard />\n  );\n}  "],"names":["selectDataInf","state","pharmacy","dashboarData","TableConteiner","styled","_templateObject","_taggedTemplateLiteral","TableBlockItem","_templateObject2","color","IncomeExpensesTableConteiner","CellConteiner","Cell","_ref","type","getBackgroundColor","DashboardIncomeExpenses","dispatch","useDispatch","incomeExpenses","useSelector","useEffect","dashboardInf","data","map","name","amount","customCellRenderer","rowIndex","columnId","style","justifyContent","_jsx","children","_jsxs","TableHeader","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","item","HeaderStyle","DashboardRecentCustomers","recentCustomers","console","log","email","spent","image","paddingLeft","borderRight","concat","src","alt","width","height","marginRight","rowData","display","alignItems","customCellName","StatisticConteiner","StatisticItem","StatisticTitleConteiner","_templateObject3","StatisticSectionTitle","_templateObject4","StatisticValue","_templateObject5","DashboardStatistic","statistic","icon","value","productsCount","suppliersCount","customersCount","link","href","sprite","Dashboard","ContentContainer","ContentBlock","DashboardPage"],"sourceRoot":""}