{"version":3,"file":"static/js/471.6d4ece99.chunk.js","mappings":"6PAGaA,EAAqBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAK/BC,EAAiBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kOAIvBG,EAAAA,EAAAA,MACMA,EAAAA,EAAAA,sBAKVA,EAAAA,EAAAA,aAEQA,EAAAA,EAAAA,YAGPC,EAA0BN,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6FAQpCM,EAAwBR,EAAAA,GAAAA,GAASS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qEAGnCG,EAAAA,EAAAA,oBAGEK,EAAiBV,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,6ECrCzBU,EAAgB,SAACC,GAAK,OAAKA,EAAMC,SAASC,YAAa,E,6BCOrD,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYR,GAEnBS,EAAY,CAChB,CAAEC,KAAM,WAAYC,KAAM,mBAAoBC,MAAM,GAADC,OAAKN,EAAKO,gBAC7D,CAAEJ,KAAM,YAAaC,KAAM,cAAeC,MAAM,GAADC,OAAKN,EAAKQ,iBACzD,CAAEL,KAAM,YAAaC,KAAM,cAAeC,MAAM,GAADC,OAAKN,EAAKS,kBAM3D,OAJAC,EAAAA,EAAAA,YAAU,WACRZ,GAASa,EAAAA,EAAAA,KACX,GAAG,CAACb,KAGFc,EAAAA,EAAAA,KAAChC,EAAkB,CAAAiC,SAChBX,EAAUY,KAAI,SAAAC,GAAI,OACjBC,EAAAA,EAAAA,MAAChC,EAAa,CAAA6B,SAAA,EACZG,EAAAA,EAAAA,MAAC7B,EAAuB,CAAA0B,SAAA,EACtBD,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIC,OAAQ,GAAGL,UACzBD,EAAAA,EAAAA,KAAA,OAAKO,KAAI,GAAAb,OAAKc,EAAAA,GAAMd,OAAGS,EAAKX,WAE9BY,EAAAA,EAAAA,MAAC3B,EAAqB,CAAAwB,SAAA,CAAC,OAAKE,EAAKZ,WAElCH,EAAKS,gBAAiBG,EAAAA,EAAAA,KAACrB,EAAc,CAAAsB,SAAEE,EAAKV,SAA0BO,EAAAA,EAAAA,KAACrB,EAAc,CAAAsB,SAAC,QAPrEE,EAAKZ,KAQT,KAIxB,CC/Be,SAASkB,IAEtB,OACET,EAAAA,EAAAA,KAACU,EAAAA,GAAgB,CAAAT,UACfG,EAAAA,EAAAA,MAACO,EAAAA,GAAY,CAAAV,SAAA,EACXD,EAAAA,EAAAA,KAACf,EAAkB,IAAG,gBAK9B,CCZe,SAAS2B,IACtB,OACEZ,EAAAA,EAAAA,KAACS,EAAS,GAEd,C","sources":["components/DashboardStatistic/DashboardStatistic.styled.js","redux/ePharmacy/selector.js","components/DashboardStatistic/DashboardStatistic.jsx","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StatisticConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const StatisticItem  = styled.li`\n  width: 240px;\n  height: 108px;\n  border-radius: 8px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  padding: 14px 18px;\n\n\n  fill: transparent;\n  stroke: ${color.blackPrimary};\n  &:first-child {\n    border-color: ${color.greenLight};\n  }\n`\nexport const StatisticTitleConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 28px;\n  \n`\n\nexport const StatisticSectionTitle = styled.h4`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.textColorSecondary};\n  \n`\nexport const StatisticValue = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.33;\n  \n`","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\n// export const selectTakeWaterHistory = (state) => state.water.history;\n\n// export const selectStageWater = (state) => state.water;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { StatisticConteiner, StatisticItem, StatisticSectionTitle, StatisticTitleConteiner, StatisticValue } from './DashboardStatistic.styled';\nimport { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\n\nexport default function DashboardStatistic() {  \n  const dispatch = useDispatch();\n  const data = useSelector(selectDataInf);\n  \n  const statistic = [\n    { name: \"products\", icon: \"#icon-streamline\", value: `${data.productsCount}` },\n    { name: \"suppliers\", icon: \"#icon-users\", value: `${data.suppliersCount}` },\n    { name: \"customers\", icon: \"#icon-users\", value: `${data.customersCount}` },\n  ];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  return (\n    <StatisticConteiner>\n      {statistic.map(link => (        \n        <StatisticItem key={link.name} >\n          <StatisticTitleConteiner>\n            <svg width={20} height={20}>\n              <use href={`${sprite}${link.icon}`} />\n            </svg>\n            <StatisticSectionTitle>All {link.name}</StatisticSectionTitle>\n          </StatisticTitleConteiner>\n          {data.customersCount ? <StatisticValue>{link.value}</StatisticValue> : <StatisticValue>0</StatisticValue>}\n        </StatisticItem>\n      ))}\n    </StatisticConteiner>\n  );\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport DashboardStatistic from \"components/DashboardStatistic/DashboardStatistic\";\n\n\nexport default function Dashboard() {  \n\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <DashboardStatistic />\n        Dashboard\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Dashboard from \"components/Dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return (\n    <Dashboard />\n  );\n}  "],"names":["StatisticConteiner","styled","_templateObject","_taggedTemplateLiteral","StatisticItem","_templateObject2","color","StatisticTitleConteiner","_templateObject3","StatisticSectionTitle","_templateObject4","StatisticValue","_templateObject5","selectDataInf","state","pharmacy","dashboarData","DashboardStatistic","dispatch","useDispatch","data","useSelector","statistic","name","icon","value","concat","productsCount","suppliersCount","customersCount","useEffect","dashboardInf","_jsx","children","map","link","_jsxs","width","height","href","sprite","Dashboard","ContentContainer","ContentBlock","DashboardPage"],"sourceRoot":""}