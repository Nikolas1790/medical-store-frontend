{"version":3,"file":"static/js/576.06a9e6aa.chunk.js","mappings":"+QAUaA,GARwBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4GAQrBF,EAAAA,GAAAA,KAAWG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,4dAMxBE,EAAcJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uG,GAIjBF,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uG,kBCd7BK,EAAmBC,EAAAA,GAAW,CAClCC,SAAUD,EAAAA,KACPE,SAAS,cAIC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbP,SAAU,IAEZF,iBAAkBA,EAClBU,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,GAAU,CAAEC,KAAMF,EAAOT,WACpC,IAGF,OACEY,EAAAA,EAAAA,MAACtB,EAAU,CAACkB,SAAUH,EAAOQ,aAAaC,SAAA,EACxCC,EAAAA,EAAAA,KAACpB,EAAW,CACVqB,GAAG,WACHL,KAAK,WACLM,KAAK,OACLC,SAAUb,EAAOc,aACjBC,MAAOf,EAAOI,OAAOT,SACrBqB,YAAY,eAEdN,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,aAG5B,C,gBClCaQ,EAAqB/B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAG5B8B,EAAAA,EAAAA,MACMA,EAAAA,EAAAA,uBCJP,SAASC,IACtB,OACEZ,EAAAA,EAAAA,MAACU,EAAkB,CAAAR,SAAA,EACjBC,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CAAAX,SAAC,eAAwB,wBAI3C,CCFe,SAASY,IACtB,IAAMvB,GAAWC,EAAAA,EAAAA,MACXuB,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAO3B,OANAC,QAAQC,IAAIJ,IAEZK,EAAAA,EAAAA,YAAU,WACR7B,GAASO,EAAAA,EAAAA,GAAU,CAAC,GACtB,GAAG,CAACP,KAGFY,EAAAA,EAAAA,KAACkB,EAAAA,GAAgB,CAAAnB,UACfF,EAAAA,EAAAA,MAACsB,EAAAA,GAAY,CAAApB,SAAA,EAEXC,EAAAA,EAAAA,KAACb,EAAoB,KACrBa,EAAAA,EAAAA,KAACS,EAAS,QAKlB,CCzBe,SAASW,IACtB,OACEpB,EAAAA,EAAAA,KAACW,EAAM,GAEX,C,8ECNO,IAAMU,EAAgB,SAACC,GAAK,OAAKA,EAAMC,SAASC,YAAa,EAEvDV,EAAkB,SAACQ,GAAK,OAAKA,EAAMC,SAASE,UAAW,C","sources":["components/OrdersUserNameFilter/OrdersUserNameFilter.styled.js","components/OrdersUserNameFilter/OrdersUserNameFilter.jsx","components/OrdersAll/OrdersAll.styled.js","components/OrdersAll/OrdersAll.jsx","components/Orders/Orders.jsx","pages/OrdersPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import styled from 'styled-components'\n\nexport const OrdersFilterConteiner = styled.div`\n  display: flex;\n  align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red;\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 8px; // Или другое значение, чтобы поддерживать пространство между инпутом и кнопкой\n`;\n\nexport const InputFilter = styled.input`\n  // Стили для инпута\n`;\n\nexport const Button = styled.button`\n  // Стили для кнопки\n`;","import { useFormik } from \"formik\";\nimport { FilterForm, InputFilter } from \"./OrdersUserNameFilter.styled\";\nimport { ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required') // Базовая валидация, требующая заполнения поля\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function OrdersUserNameFilter() {  \n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(ordersInf({ name: values.userName }));\n    },\n  });\n\n  return (\n    <FilterForm onSubmit={formik.handleSubmit}>\n      <InputFilter\n        id=\"userName\"\n        name=\"userName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.userName}\n        placeholder=\"User Name\"\n      />\n      <button type=\"submit\">Filter</button>\n    </FilterForm>\n  );\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const OrdersAllConteiner = styled.div`\n  width: 1280px;\n  height: 502px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n`\n","import { TableHeader } from \"common/GiobalStyles\";\nimport { OrdersAllConteiner } from \"./OrdersAll.styled\";\n\nexport default function OrdersAll() {  \n  return (   \n    <OrdersAllConteiner>\n      <TableHeader>All orders</TableHeader>\n      ddddddddddddddddddd\n    </OrdersAllConteiner>\n  )\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectOrdersInf } from \"../../redux/ePharmacy/selector\";\nimport { ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useEffect } from \"react\";\nimport OrdersUserNameFilter from \"components/OrdersUserNameFilter/OrdersUserNameFilter\";\nimport OrdersAll from \"components/OrdersAll/OrdersAll\";\n\nexport default function Orders() {  \n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrdersInf);  \n  console.log(orders)\n\n  useEffect(() => {\n    dispatch(ordersInf({}));\n  }, [dispatch]);\n\n  return (    \n    <ContentContainer>\n      <ContentBlock>\n\n        <OrdersUserNameFilter />\n        <OrdersAll />\n        \n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Orders from \"components/Orders/Orders\";\n\nexport default function OrdersPage() {\n  return (\n    <Orders />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\n// export const selectStageWater = (state) => state.water;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n"],"names":["FilterForm","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","InputFilter","_templateObject3","_templateObject4","validationSchema","Yup","userName","required","OrdersUserNameFilter","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","ordersInf","name","_jsxs","handleSubmit","children","_jsx","id","type","onChange","handleChange","value","placeholder","OrdersAllConteiner","color","OrdersAll","TableHeader","Orders","orders","useSelector","selectOrdersInf","console","log","useEffect","ContentContainer","ContentBlock","OrdersPage","selectDataInf","state","pharmacy","dashboarData","ordersData"],"sourceRoot":""}