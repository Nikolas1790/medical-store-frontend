{"version":3,"file":"static/js/582.44e1885c.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/UserNameFilter/UserNameFilter.styled.js","components/CustomButton/CustomButton.jsx","components/UserNameFilter/UserNameFilter.jsx","components/Utils/utils.jsx","components/Customers/Customers.jsx","pages/CustomersPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: 100%;\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.textColorSecondary};\n  }\n`;\n\nexport const Button = styled.div`\n  width: 116px;\n`;","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import { useFormik } from \"formik\";\nimport { Button, FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\n// import { customersInf, ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n// import { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function UserNameFilter({dataFactory, plholder }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n//   const customers = useSelector(selectCustomersInf);  \n// console.log(customers)\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <Button><CustomButton label=\"Rest\" onClick={() => handleReset()}/></Button>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return 'black';\n  }\n};","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { customersInf } from \"../../redux/ePharmacy/operations\";\n\nexport default function Customers() {  \n\n  return (\n    <ContentContainer>\n      <ContentBlock>\n<UserNameFilter dataFactory={customersInf}/>\n        \n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Customers from \"components/Customers/Customers\";\n\nexport default function CustomersPage() {  \n  return (\n    <Customers />\n  );\n}"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","color","props","prop","FilterConteiner","FilterForm","_templateObject2","InputFilter","_templateObject3","Button","_templateObject4","CustomButton","_ref","className","label","onClick","icon","_jsxs","type","children","_jsx","FilterIcon","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","width","height","href","concat","sprite","getColor","getBackgroundColor","getStatusColor","getBackgroundStatusColor","Customers","ContentContainer","ContentBlock","customersInf","CustomersPage"],"sourceRoot":""}