{"version":3,"file":"static/js/224.88cf59b2.chunk.js","mappings":"wSAGaA,EAAa,WAAH,OACrBC,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAIC,UACvBH,EAAAA,EAAAA,KAAA,OAAKI,KAAI,GAAAC,OAAKC,EAAAA,EAAM,mBAClB,EAGKC,EAAW,SAACC,GACvB,OAAQA,GACN,IAAK,SACH,OAAOC,EAAAA,EAAAA,IACT,IAAK,UACH,OAAOA,EAAAA,EAAAA,WACT,IAAK,QACH,OAAOA,EAAAA,EAAAA,aACT,QACE,MAAO,QAEb,EAEaC,EAAqB,SAACF,GACjC,OAAQA,GACN,IAAK,SACH,OAAOC,EAAAA,EAAAA,aACT,IAAK,UACH,OAAOA,EAAAA,EAAAA,eACT,IAAK,QACH,OAAOA,EAAAA,EAAAA,sBACT,QACE,MAAO,QAEb,EAEaE,EAAiB,SAACH,GAC7B,OAAQA,GACN,IAAK,YACH,OAAOC,EAAAA,EAAAA,WACT,IAAK,YACH,OAAOA,EAAAA,EAAAA,OACT,IAAK,UAML,IAAK,UACH,OAAOA,EAAAA,EAAAA,OALT,IAAK,YACH,OAAOA,EAAAA,EAAAA,IACT,IAAK,aACH,OAAOA,EAAAA,EAAAA,KAGT,IAAK,YACH,OAAOA,EAAAA,EAAAA,YACT,QACE,MAAO,QAEb,EAEaG,EAA2B,SAACJ,GACvC,OAAQA,GACN,IAAK,YAYL,IAAK,YACH,OAAOC,EAAAA,EAAAA,eAXT,IAAK,YACH,OAAOA,EAAAA,EAAAA,gBACT,IAAK,UAML,IAAK,UACH,OAAOA,EAAAA,EAAAA,gBALT,IAAK,YACH,OAAOA,EAAAA,EAAAA,aACT,IAAK,aACH,OAAOA,EAAAA,EAAAA,cAKT,QACE,MAAO,QAEb,C,+LCxEcI,EAAiBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAK3BC,EAAiBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6LAMnBP,EAAAA,EAAAA,uB,SCVTU,EAA+BL,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,20CAa9BP,EAAAA,EAAAA,MAIXA,EAAAA,EAAAA,mBAakBA,EAAAA,EAAAA,sBAQbA,EAAAA,EAAAA,MAYaA,EAAAA,EAAAA,uBAIlBW,EAAWN,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iMAIrB,SAAAK,GAAA,IAAGb,EAAIa,EAAJb,KAAI,OAAOD,EAAAA,EAAAA,IAASC,EAAK,IACvB,SAAAc,GAAA,IAAGd,EAAIc,EAAJd,KAAI,OAAOE,EAAAA,EAAAA,IAAmBF,EAAK,IAQzCe,EAAUT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uOAEpB,SAAAS,GAAA,IAAGjB,EAAIiB,EAAJjB,KAAI,OAAOD,EAAAA,EAAAA,IAASC,EAAK,IAGxB,SAAAkB,GAAO,MAAiB,UAAjBA,EAAJlB,KAA+B,MAAQ,MAAM,GAM7CC,EAAAA,EAAAA,c,SCzEH,SAASkB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA/BF,eACFG,EAAOH,EAAiBA,EAAeI,KAAI,SAAAb,GAAA,IAAGc,EAAId,EAAJc,KAAMC,EAAMf,EAANe,OAAY,MAAO,CAAPf,EAAJb,KAAkB2B,EAAMC,EAAO,IAAI,IACrGC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACX,GAAG,CAACV,IAEJ,IAAMW,EAAqB,SAACC,EAAUC,EAAUR,GAC9C,IAAMS,EAAWT,EAAKO,GAAU,GAC1BG,EAAYV,EAAKO,GACnBI,EAAQ,CAAC,EAKb,MAJiB,QAAbH,IACFG,EAAMC,eAAiB,aAIvB7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAACF,MAAOA,EAAMzC,SACH,QAAbsC,GAAuBzC,EAAAA,EAAAA,KAACuB,EAAO,CAACf,KAAMkC,EAASvC,SAAEwC,EAAU,KAC7C,SAAbF,GAAqBzC,EAAAA,EAAAA,KAACoB,EAAQ,CAACZ,KAAMkC,EAASvC,SAAEwC,EAAU,KAAiBA,EAAU,IAI7F,EAEA,OACEI,EAAAA,EAAAA,MAAC9B,EAAc,CAAAd,SAAA,EACbH,EAAAA,EAAAA,KAACgD,EAAAA,GAAW,CAAA7C,SAAC,qBACbH,EAAAA,EAAAA,KAACmB,EAA4B,CAAAhB,UAC3B4C,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACLC,QAASjB,EAAKkB,OACdC,iBAAkB,GAClBC,aAAc,CAAC,IAAK,IAAK,IACzBC,sBAAsB,EACtBC,mBAAmB,EACnBC,iBAAiB,EAAMrD,SAAA,EAEvBH,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAACtB,KAAK,QAAQuB,aAAc,SAAClB,GAAQ,OAAKD,EAAmBC,EAAU,OAAQP,EAAK,KAC3FjC,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAACtB,KAAK,GAAGuB,aAAc,SAAClB,GAAQ,OAAKD,EAAmBC,EAAU,UAAWP,EAAK,KACzFjC,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAACtB,KAAK,GAAGuB,aAAc,SAAClB,GAAQ,OAAKD,EAAmBC,EAAU,MAAOP,EAAK,WAK/F,CC3Ce,SAAS0B,IACtB,IAAM/B,GAAWC,EAAAA,EAAAA,MACT+B,GAAoB7B,EAAAA,EAAAA,IAAYC,EAAAA,IAAhC4B,iBAERvB,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACX,GAAG,CAACV,IAEJ,IAAMK,EAAO2B,EAAkBA,EAAgB1B,KAAI,SAAAb,GAA4B,MAAO,CAA5BA,EAAJc,KAAWd,EAALwC,MAAYxC,EAALyC,MAAYzC,EAAL0C,MAAyC,IAAI,GAGjHxB,EAAqB,SAACC,EAAUC,EAAUR,GAC9C,IAAIW,EAAQ,CAAC,EAIb,MAHkB,UAAbH,IACHG,EAAMoB,YAAW,aAAA3D,OAAgBI,EAAAA,EAAAA,yBAGjCT,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAACF,MAAOA,EAAMzC,SAChB8B,EAAKO,IAGZ,EAuBA,OACEO,EAAAA,EAAAA,MAAC9B,EAAc,CAAAd,SAAA,EACbH,EAAAA,EAAAA,KAACgD,EAAAA,GAAW,CAAA7C,SAAC,sBAEbH,EAAAA,EAAAA,KAACiE,EAAAA,GAAkB,CAAA9D,UACjB4C,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACLC,QAASjB,EAAKkB,OACdC,iBAAkB,GAClBC,aAAc,CAAC,IAAK,IAAK,KACzBC,sBAAsB,EACtBC,mBAAmB,EACnBC,iBAAiB,EAAMrD,SAAA,EAEvBH,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAACtB,KAAK,OAAOuB,aAAc,SAAClB,GAAQ,OAjC5B,SAACA,EAAUC,EAAUR,GAC1C,IAAIW,EAAQ,CAAC,EACPsB,EAAUjC,EAAKO,GASrB,MARiB,SAAbC,IACFG,EAAMoB,YAAW,aAAA3D,OAAgBI,EAAAA,EAAAA,wBAGlB,SAAbgC,IACFG,EAAMuB,YAAc,QAIpBnE,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAACF,MAAOA,EAAMzC,UACjB4C,EAAAA,EAAAA,MAAA,OAAKH,MAAO,CAAEwB,QAAS,OAAQC,WAAY,UAAWlE,SAAA,EACpDH,EAAAA,EAAAA,KAAA,OAAKsE,IAAKJ,EAAQ,GAAIK,IAAKL,EAAQ,GAAItB,MAAO,CAAE3C,MAAO,OAAQC,OAAQ,OAAQsE,YAAa,WAC5FxE,EAAAA,EAAAA,KAAA,KAAAG,SAAI+D,EAAQ,SAIpB,CAcwDO,CAAejC,EAAU,OAAQP,EAAK,KACtFjC,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAACtB,KAAK,QAAQuB,aAAc,SAAClB,GAAQ,OAAKD,EAAmBC,EAAU,QAASP,EAAKC,KAAI,SAAAwC,GAAI,OAAIA,EAAK,EAAE,IAAE,KACjH1E,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAACtB,KAAK,QAAQuB,aAAc,SAAClB,GAAQ,OAAKD,EAAmBC,EAAU,QAASP,EAAKC,KAAI,SAAAwC,GAAI,OAAIA,EAAK,EAAE,IAAE,WAK3H,C,wBCvEaC,EAAqB7D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAK/B4D,EAAiB9D,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kOAIvBP,EAAAA,EAAAA,MACMA,EAAAA,EAAAA,sBAKVA,EAAAA,EAAAA,aAEQA,EAAAA,EAAAA,YAGPoE,EAA0B/D,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6FAQpC8D,EAAwBhE,EAAAA,GAAAA,GAASiE,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,qEAGnCP,EAAAA,EAAAA,oBAGEuE,EAAiBlE,EAAAA,GAAAA,EAAQmE,IAAAA,GAAAjE,EAAAA,EAAAA,GAAA,6EC9BvB,SAASkE,IACtB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXI,GAAOF,EAAAA,EAAAA,IAAYC,EAAAA,IAEnBmD,EAAY,CAChB,CAAEhD,KAAM,WAAYiD,KAAM,mBAAoBC,MAAM,GAADhF,OAAK4B,EAAKqD,gBAC7D,CAAEnD,KAAM,YAAaiD,KAAM,cAAeC,MAAM,GAADhF,OAAK4B,EAAKsD,iBACzD,CAAEpD,KAAM,YAAaiD,KAAM,cAAeC,MAAM,GAADhF,OAAK4B,EAAKuD,kBAM3D,OAJAnD,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACX,GAAG,CAACV,KAGF5B,EAAAA,EAAAA,KAAC2E,EAAkB,CAAAxE,SAChBgF,EAAUjD,KAAI,SAAAuD,GAAI,OACjB1C,EAAAA,EAAAA,MAAC6B,EAAa,CAAAzE,SAAA,EACZ4C,EAAAA,EAAAA,MAAC8B,EAAuB,CAAA1E,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAI,GAAAC,OAAKC,EAAAA,GAAMD,OAAGoF,EAAKL,WAE9BrC,EAAAA,EAAAA,MAAC+B,EAAqB,CAAA3E,SAAA,CAAC,OAAKsF,EAAKtD,YAEnCnC,EAAAA,EAAAA,KAACgF,EAAc,CAAA7E,SAAE8B,EAAKuD,eAAiBC,EAAKJ,MAAQ,MAPlCI,EAAKtD,KAQT,KAIxB,CC5Be,SAASuD,IAEtB,OACE1F,EAAAA,EAAAA,KAAC2F,EAAAA,GAAgB,CAAAxF,UACf4C,EAAAA,EAAAA,MAAC6C,EAAAA,GAAY,CAACC,IAAI,OAAOC,OAAO,OAAM3F,SAAA,EACpCH,EAAAA,EAAAA,KAACkF,EAAkB,KAEnBnC,EAAAA,EAAAA,MAAClC,EAAc,CAAAV,SAAA,EACbH,EAAAA,EAAAA,KAAC2D,EAAwB,KACzB3D,EAAAA,EAAAA,KAAC2B,EAAuB,WAMlC,CCpBe,SAASoE,IACtB,OACE/F,EAAAA,EAAAA,KAAC0F,EAAS,GAEd,C,gFCNO,IAAM1D,EAAgB,SAACgE,GAAK,OAAKA,EAAMC,SAASC,YAAa,EAEvDC,EAAkB,SAACH,GAAK,OAAKA,EAAMC,SAASG,UAAW,C","sources":["components/Utils/utils.jsx","components/Dashboard/Dashboard.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.jsx","components/DashboardRecentCustomers/DashboardRecentCustomers.jsx","components/DashboardStatistic/DashboardStatistic.styled.js","components/DashboardStatistic/DashboardStatistic.jsx","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return 'black';\n  }\n};","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const  TableConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const  TableBlockItem = styled.div`\n\n  min-width: 630px;\n  height: 512px;\n  /* border: 1px solid red; */\n\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n  background: rgb(255, 255, 255);\n  overflow: hidden;\n`","import color from 'common/GlobalColers'\nimport { getBackgroundColor, getColor } from 'components/Utils/utils';\nimport styled from 'styled-components'\n\nexport const IncomeExpensesTableConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n  .bp5-table-header {\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; \n  }\n  .bp5-table-column-name{\n    margin-left: -10px;\n  }\n\n  .bp5-table-header::after {\n    content: ''; \n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n\n  .bp5-table-cell {  \n    position: relative; \n    display: flex;\n    align-items: center;\n    font-size: 16px;\n    background: ${color.white};\n    padding-left: 20px;\n    box-shadow: none; \n    padding: 0;\n\n  }\n  .bp5-table-cell::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n`\n\nexport const CellType = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content:center;\n  color: ${({ type }) => getColor(type)};\n  background: ${({ type }) => getBackgroundColor(type)};\n  width: 80px;\n  height: 25px;\n  font-size: 14px;\n  border-radius: 40px;\n\n`\n\nexport const CellSum = styled.p`\n  position: relative;\n  color: ${({ type }) => getColor(type)};\n\n  &::after {\n    content: ${({ type }) => (type === 'Error' ? '\" \"' : 'none')};\n    position: absolute;\n    top: 58%;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: ${color.blackPrimary};\n    transform: translateY(-50%);\n  }\n`;","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { CellSum, CellType, IncomeExpensesTableConteiner } from \"./DashboardIncomeExpenses.styled\";\n\nexport default function DashboardIncomeExpenses() {  \n  const dispatch = useDispatch();\n  const { incomeExpenses } = useSelector(selectDataInf);  \n  const data = incomeExpenses ? incomeExpenses.map(({ name, amount, type }) => [type, name, amount]) : [];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]); \n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    const cellType = data[rowIndex][0]; // Предположим, что тип операции находится в первом элементе массива для каждой строки.\n    const cellValue = data[rowIndex]\n    let style = {};\n    if (columnId === 'sum') {\n      style.justifyContent = 'flex-end';\n    }  \n\n    return (\n      <Cell style={style}>\n        {columnId === 'sum' ? ( <CellSum type={cellType}>{cellValue[2]}</CellSum> ) : (\n          columnId === 'type'? <CellType type={cellType}>{cellValue[0]}</CellType> : cellValue[1]\n        )}\n      </Cell>\n    );\n  };  \n  \n  return (\n    <TableBlockItem>\n      <TableHeader>Income/Expenses</TableHeader>\n      <IncomeExpensesTableConteiner>\n        <Table2 \n          numRows={data.length} \n          defaultRowHeight={65} \n          columnWidths={[120, 393, 77 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Today\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'type', data)} />\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'details', data)}/>\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'sum', data)} />\n        </Table2>\n      </IncomeExpensesTableConteiner>\n    </TableBlockItem>\n  )\n}","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport color from \"common/GlobalColers\";\n\n\nexport default function DashboardRecentCustomers() {  \n  const dispatch = useDispatch();\n  const { recentCustomers } = useSelector(selectDataInf);  \n\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  const data = recentCustomers ? recentCustomers.map(({ name, email, spent, image }) => [ name, email, spent, image ]) : [];\n\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let style = {};\n    if ( columnId === 'email') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n    return (\n      <Cell style={style}>\n        {data[rowIndex]}        \n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={rowData[3]} alt={rowData[0]} style={{ width: '36px', height: '36px', marginRight: '10px' }} />\n          <p>{rowData[0]}</p>\n        </div>\n      </Cell>\n    );\n  };\n  return (    \n    <TableBlockItem>      \n      <TableHeader>Recent Customers</TableHeader>\n     \n      <AllConteinersTable >\n        <Table2  \n          numRows={data.length} \n          defaultRowHeight={78} \n          columnWidths={[203, 269, 118 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Name\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n          <Column name=\"Email\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'email', data.map(item => item[1]))} />\n          <Column name=\"Spent\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'spent', data.map(item => item[2]))} />\n        </Table2>\n      </AllConteinersTable>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StatisticConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const StatisticItem  = styled.li`\n  width: 240px;\n  height: 108px;\n  border-radius: 8px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  padding: 14px 18px;\n\n\n  fill: transparent;\n  stroke: ${color.blackPrimary};\n  &:first-child {\n    border-color: ${color.greenLight};\n  }\n`\nexport const StatisticTitleConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 28px;\n  \n`\n\nexport const StatisticSectionTitle = styled.h4`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.textColorSecondary};\n  \n`\nexport const StatisticValue = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.33;\n  \n`","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { StatisticConteiner, StatisticItem, StatisticSectionTitle, StatisticTitleConteiner, StatisticValue } from './DashboardStatistic.styled';\nimport { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\n\nexport default function DashboardStatistic() {  \n  const dispatch = useDispatch();\n  const data = useSelector(selectDataInf);\n  \n  const statistic = [\n    { name: \"products\", icon: \"#icon-streamline\", value: `${data.productsCount}` },\n    { name: \"suppliers\", icon: \"#icon-users\", value: `${data.suppliersCount}` },\n    { name: \"customers\", icon: \"#icon-users\", value: `${data.customersCount}` },\n  ];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  return (\n    <StatisticConteiner>\n      {statistic.map(link => (        \n        <StatisticItem key={link.name} >\n          <StatisticTitleConteiner>\n            <svg width={20} height={20}>\n              <use href={`${sprite}${link.icon}`} />\n            </svg>\n            <StatisticSectionTitle>All {link.name}</StatisticSectionTitle>\n          </StatisticTitleConteiner>\n          <StatisticValue>{data.customersCount ? link.value : 0}</StatisticValue>\n        </StatisticItem>\n      ))}\n    </StatisticConteiner>\n  );\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport DashboardIncomeExpenses from \"components/DashboardIncomeExpenses/DashboardIncomeExpenses\";\nimport DashboardRecentCustomers from \"components/DashboardRecentCustomers/DashboardRecentCustomers\";\nimport DashboardStatistic from \"components/DashboardStatistic/DashboardStatistic\";\nimport { TableConteiner } from \"./Dashboard.styled\";\n\n\nexport default function Dashboard() {  \n\n  return (\n    <ContentContainer>\n      <ContentBlock top=\"20px\" bottom=\"40px\" >\n        <DashboardStatistic />\n\n        <TableConteiner>\n          <DashboardRecentCustomers />\n          <DashboardIncomeExpenses />\n        </TableConteiner>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Dashboard from \"components/Dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return (\n    <Dashboard />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;\n"],"names":["FilterIcon","_jsx","width","height","children","href","concat","sprite","getColor","type","color","getBackgroundColor","getStatusColor","getBackgroundStatusColor","TableConteiner","styled","_templateObject","_taggedTemplateLiteral","TableBlockItem","_templateObject2","IncomeExpensesTableConteiner","CellType","_ref","_ref2","CellSum","_templateObject3","_ref3","_ref4","DashboardIncomeExpenses","dispatch","useDispatch","incomeExpenses","useSelector","selectDataInf","data","map","name","amount","useEffect","dashboardInf","customCellRenderer","rowIndex","columnId","cellType","cellValue","style","justifyContent","Cell","_jsxs","TableHeader","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","DashboardRecentCustomers","recentCustomers","email","spent","image","borderRight","AllConteinersTable","rowData","paddingLeft","display","alignItems","src","alt","marginRight","customCellName","item","StatisticConteiner","StatisticItem","StatisticTitleConteiner","StatisticSectionTitle","_templateObject4","StatisticValue","_templateObject5","DashboardStatistic","statistic","icon","value","productsCount","suppliersCount","customersCount","link","Dashboard","ContentContainer","ContentBlock","top","bottom","DashboardPage","state","pharmacy","dashboarData","selectOrdersInf","ordersData"],"sourceRoot":""}