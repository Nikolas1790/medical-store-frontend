{"version":3,"file":"static/js/273.85838b4c.chunk.js","mappings":"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","sources":["components/SuppliersAll/SuppliersAll.styled.js","components/BtnAddEditSuppliers/BtnAddEditSuppliers.styled.js","components/Modals/SuppliesModal.jsx","components/BtnAddEditSuppliers/BtnAddEditSuppliers.jsx","components/SuppliersAll/SuppliersAll.jsx","components/Suppliers/Suppliers.jsx","pages/SuppliersPage.jsx"],"sourcesContent":["import { getActiveColor, getBackgroundActiveColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 89px;\n  height: 25px;\n  color: ${({ type }) => getActiveColor(type)};\n  background: ${({ type }) => getBackgroundActiveColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const EditSuppliers = styled.p`\n  color: ${color.greenLight};\n  margin-left: 4px;\n`\nexport const AddEditSuppliers = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${({ width }) => width || '196px'}; // default value if width is not provided\n  height: ${({ height }) => height || '44px'};\n  font-size: 14px;\n  border: 1px solid ${color.greenAmazing};\n  border-radius: 60px;\n\n  fill: ${color.greenLight};\n  stroke: ${color.greenLight};\n\n  transition: all 0.25s linear;\n  &:hover {\n    fill: ${color.white};\n    stroke: ${color.white};\n    \n    color: ${color.white};\n    background:  ${color.greenLight};\n      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.4); \n      border: none;\n      ${EditSuppliers} {   \n        color: ${color.white}; /* Так текст станет белым при наведении на кнопку */\n      }\n    }\n`\n\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { BtnConteiner, ClosingSymbol, ColumnConteiner, Conteiner, Input, InputConteiner, Title } from \"./Modals.styled\";\nimport sprite from '../../img/sprite.svg';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport CustomButtonCansel from \"components/CustomButtonCansel/CustomButtonCansel\";\nimport { useEffect, useRef, useState } from 'react';\nimport { AVAILABLE_STATUS } from 'components/Utils/utils';\nimport { useDispatch } from 'react-redux';\nimport { addSupplier, updateSupplier } from '../../redux/ePharmacy/operations';\nimport ModalSelector from './ModalSelector/ModalSelector';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(),\n  suppliers: Yup.string().required(),\n\n  amount: Yup.string().required(),\n  // amount: Yup.number().required('Stock is required').positive('Stock must be positive'),\n\n  address: Yup.string().required(),\n  date: Yup.string().required(),\n  status: Yup.string().required(),\n});\n\nexport default function SuppliesModals({ closeModals, isUpdate, existingSuppliers }) {  \n  const [selectedLevels, setSelectedLevels] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const dispatch = useDispatch();\n  const id = existingSuppliers?.[6];\n// console.log(existingSuppliers)\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false); \n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => document.removeEventListener('mousedown', handleOutsideClick);\n  }, []); \n  const initialValues = isUpdate ? {\n    name: existingSuppliers?.[0],\n    suppliers: existingSuppliers?.[2],\n    amount: existingSuppliers?.[4].replace(/^\\D*/, '').trim(), \n    address: existingSuppliers?.[1],\n    date: existingSuppliers?.[3],\n    status: existingSuppliers?.[5],\n  } : {\n    name: '',\n    suppliers: '',\n    amount: '',\n    address: '',\n    date: '',\n    status: '',\n  };\n\n    // Инициализация Formik\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      console.log(values)\n      isUpdate ? dispatch(updateSupplier({ id: id, supplierData: values })) : dispatch(addSupplier(values));\n      resetForm(); \n      closeModals()\n    },\n  });  \n  \n  const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen);\n\n  return (\n    <Conteiner >\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={26} height={26}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <Title>{ isUpdate  ? 'Edit product' :'Add a new suppliers'}</Title>\n      <div>\n        <form onSubmit={formik.handleSubmit}>\n          <InputConteiner>\n            <ColumnConteiner>\n              <Input\n                name=\"name\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur} \n                value={formik.values.name}\n                placeholder=\"Suppliers Info\"\n                haserror={formik.touched.name && formik.errors.name}\n              />\n\n              <Input\n                name=\"suppliers\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur} \n                value={formik.values.suppliers}\n                placeholder=\"Company\"\n                haserror={formik.touched.suppliers && formik.errors.suppliers}\n              />\n\n              <Input\n                name=\"amount\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur} \n                value={formik.values.amount}\n                placeholder=\"Ammount\"\n                haserror={formik.touched.amount && formik.errors.amount}\n              />\n            </ColumnConteiner>\n\n            <ColumnConteiner>   \n            <Input\n                name=\"address\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur} \n                value={formik.values.address}\n                placeholder=\"Address\"\n                haserror={formik.touched.address && formik.errors.address}\n              />\n\n              <Input\n                name=\"date\"\n                type=\"date\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur} \n                value={formik.values.date}\n                placeholder=\"Delivery date\"\n                haserror={formik.touched.date && formik.errors.date}\n              />\n              <ModalSelector\n                isDropdownOpen={isDropdownOpen}\n                toggleDropdown={toggleDropdown}\n                selectedCategory={selectedLevels}\n                setSelectedCategory={setSelectedLevels}\n                formik={formik}\n                categories={AVAILABLE_STATUS}\n                hasError={formik.touched.status && formik.errors.status}\n                reservName={ existingSuppliers?.[5] }\n                def=\"supplies\"\n                fieldName=\"status\"\n              />\n            </ColumnConteiner>\n          </InputConteiner>\n\n          <BtnConteiner>\n            <CustomButton width=\"133px\" label=\"Add\"  type='submit'/>\n            <CustomButtonCansel width=\"133px\" label=\"Cansel\" onClick={closeModals} />        \n          </BtnConteiner>\n        </form>\n      </div>\n    </Conteiner>\n  );\n}\n\n\n\n","import { AddEditSuppliers, EditSuppliers } from \"./BtnAddEditSuppliers.styled\";\nimport sprite from '../../img/sprite.svg';\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport { useState } from \"react\";\nimport SuppliesModals from \"components/Modals/SuppliesModal\";\n\nexport default function BtnAddEditSuppliers({width, height, name, isUpdate, item }){\n  // console.log(item)\n  const [openModal, setOpenModal] = useState(false);\n  return (\n    <div>\n      <AddEditSuppliers width={width} height={height} onClick={() => setOpenModal(true)}>\n\n        {name === \"edit\" ? (\n          <>\n            <svg width={14} height={14}>\n              <use href={`${sprite}#icon-edit`} />\n            </svg>\n            <EditSuppliers>Edit</EditSuppliers>\n          </>\n        ) : <p>Add a new suppliers</p>}\n\n      </AddEditSuppliers>\n        <PortalModal active={openModal} setActive={setOpenModal}>\n          <SuppliesModals closeModals={() => setOpenModal()} isUpdate={isUpdate} existingSuppliers={item}/>\n        </PortalModal>\n    </div>\n  );\n};","import { AllConteinerBigTable, AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport { StatucColor } from \"./SuppliersAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\nimport BtnAddEditSuppliers from \"components/BtnAddEditSuppliers/BtnAddEditSuppliers\";\n\nexport default function SuppliersAll({ suppliers }) { \n  const data = suppliers ? suppliers.map(({ name, address, suppliers, date, amount, status, _id }) => [ name, address, suppliers, date, amount, status, _id ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex] ;\n    let style = {};\n  \n\n    if ( columnId !== 'action') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n\n    if (columnId === 'date') {\n      const date = new Date(content);\n      content = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    }\n\n    if (columnId === 'ammount') {\n      content = content.replace(/^\\D*/, '').trim();\n    }\n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n    // console.log(content)\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : (\n          columnId === 'action' ? <BtnAddEditSuppliers width=\"82px\" height=\"34px\" name=\"edit\" isUpdate={true} item={content}/> : content)}  \n      </Cell>\n    );\n  };\n\n  return (   \n    <AllConteinerBigTable>\n      <TableHeader>All suppliers</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n          key={`table-${data}`}\n          numRows={data.length} \n          defaultRowHeight={76} \n          columnWidths={[191, 188, 166, 215, 162, 189, 129 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"User Info\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'name', data.map(item => item[0]))} />\n          <Column name=\"Address\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'address', data.map(item => item[1]))} />\n          <Column name=\"Company\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'company', data.map(item => item[2]))} />\n          <Column name=\"Delivery date\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'date', data.map(item => item[3]))} />\n          <Column name=\"Ammount\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'ammount', data.map(item => item[4]))} />\n          <Column name=\"Status\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'status', data.map(item => item[5]))} />\n          <Column name=\"Action\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'action', data)} />\n\n        </Table2>\n      </AllConteinersTable>\n    </AllConteinerBigTable>\n  )\n}","import { ContentBlock, ContentContainer, FilterAddConteiner } from \"common/GiobalStyles\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { suppliersInf } from \"../../redux/ePharmacy/operations\";\nimport SuppliersAll from \"components/SuppliersAll/SuppliersAll\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSuppliersInf } from \"../../redux/ePharmacy/selector\";\nimport { useEffect, useState } from \"react\";\nimport { Pagination } from \"components/Pagination/Pagination\";\nimport BtnAddEditSuppliers from \"components/BtnAddEditSuppliers/BtnAddEditSuppliers\";\n\nexport default function Suppliers() {  \n  const dispatch = useDispatch();\n  const suppliers = useSelector(selectSuppliersInf);  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterName, setFilterName] = useState('');\n  const limitPerPage = 5;\n\n  useEffect(() => {\n    dispatch(suppliersInf({ page: currentPage, limit: limitPerPage, name: '' || filterName }));\n  }, [dispatch, currentPage, limitPerPage, filterName]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n// console.log(suppliers)\n  const totalSuppliers = suppliers.total || 0;\n  const totalPages = Math.ceil(totalSuppliers / limitPerPage);\n\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <FilterAddConteiner>\n          <UserNameFilter dataFactory={suppliersInf} setFilterName={setFilterName} setCurrentPage={setCurrentPage} />\n\n          <BtnAddEditSuppliers />\n        </FilterAddConteiner>\n\n        <div>\n        <SuppliersAll suppliers={suppliers.suppliers} />\n        <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Suppliers from \"components/Suppliers/Suppliers\";\n\nexport default function SuppliersPage() {\n  return (\n    <Suppliers />\n  );\n}  "],"names":["StatucColor","styled","_templateObject","_taggedTemplateLiteral","_ref","type","getActiveColor","_ref2","getBackgroundActiveColor","EditSuppliers","color","AddEditSuppliers","_templateObject2","width","height","validationSchema","Yup","name","required","suppliers","amount","address","date","status","SuppliesModals","closeModals","isUpdate","existingSuppliers","_useState","useState","_useState2","_slicedToArray","selectedLevels","setSelectedLevels","_useState3","_useState4","isDropdownOpen","setIsDropdownOpen","dropdownRef","useRef","dispatch","useDispatch","id","useEffect","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","initialValues","replace","trim","formik","useFormik","onSubmit","values","resetForm","console","log","updateSupplier","supplierData","addSupplier","_jsxs","Conteiner","children","_jsx","ClosingSymbol","onClick","href","concat","sprite","Title","handleSubmit","InputConteiner","ColumnConteiner","Input","onChange","handleChange","onBlur","handleBlur","value","placeholder","haserror","touched","errors","ModalSelector","toggleDropdown","selectedCategory","setSelectedCategory","categories","AVAILABLE_STATUS","hasError","reservName","def","fieldName","BtnConteiner","CustomButton","label","CustomButtonCansel","BtnAddEditSuppliers","item","openModal","setOpenModal","_Fragment","PortalModal","active","setActive","SuppliersAll","data","map","_id","customCellRenderer","rowIndex","columnId","content","style","borderRight","Date","toLocaleDateString","year","month","day","paddingLeft","Cell","AllConteinerBigTable","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","Suppliers","useSelector","selectSuppliersInf","currentPage","setCurrentPage","filterName","setFilterName","suppliersInf","page","limit","totalSuppliers","total","totalPages","Math","ceil","ContentContainer","ContentBlock","FilterAddConteiner","UserNameFilter","dataFactory","Pagination","onPageChange","SuppliersPage"],"sourceRoot":""}