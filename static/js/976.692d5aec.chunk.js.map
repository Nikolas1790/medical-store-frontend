{"version":3,"file":"static/js/976.692d5aec.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/UserNameFilter/UserNameFilter.styled.js","components/CustomButton/CustomButton.jsx","components/UserNameFilter/UserNameFilter.jsx","components/Utils/utils.jsx","components/ProductsAll/ProductsAll.styled.js","components/ProductsAll/ProductsAll.jsx","components/Products/Products.jsx","pages/ProductsPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: 100%;\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.textColorSecondary};\n  }\n`;\n\nexport const Button = styled.div`\n  width: 116px;\n`;","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import { useFormik } from \"formik\";\nimport { Button, FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\n// import { customersInf, ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n// import { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function UserNameFilter({dataFactory, plholder }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n//   const customers = useSelector(selectCustomersInf);  \n// console.log(customers)\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <Button><CustomButton label=\"Rest\" onClick={() => handleReset()}/></Button>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n\nexport const getActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenLight;\n    case 'Deactive':\n      return color.red;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenSecondary;\n    case 'Deactive':\n      return color.redSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};","import { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\n\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`","import { AllConteinerBigTable, AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport { StatucColor } from \"./ProductsAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\n\nexport default function ProductsAll( {products} ) { \n  console.log(products)\n  const data = products ? products.map(({ name, category, stock, suppliers, price }) => [ name, category, stock, suppliers, price ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'actions') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : content}        \n      </Cell>\n    );\n  };\n\n  return (   \n    <AllConteinerBigTable>\n      <TableHeader>All products</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n          numRows={data.length} \n          defaultRowHeight={76} \n          columnWidths={[276, 230, 199, 226, 163, 146 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Product Info\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'name', data.map(item => item[0]))} />\n          <Column name=\"Category\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'category', data.map(item => item[1]))} />\n          <Column name=\"Stock\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'stocks', data.map(item => item[2]))} />\n          <Column name=\"Suppliers\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'suppliers', data.map(item => item[3]))} />\n          <Column name=\"Price\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'price', data.map(item => item[4]))} />\n          <Column name=\"Action\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'actions', data.map(item => item[5]))} />\n        </Table2>\n      </AllConteinersTable>\n    </AllConteinerBigTable>\n  )\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { productsInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectProductsInf } from \"../../redux/ePharmacy/selector\";\nimport { useEffect } from \"react\";\nimport ProductsAll from \"components/ProductsAll/ProductsAll\";\n\nexport default function Products() {  \n  const dispatch = useDispatch();\n  const products = useSelector(selectProductsInf);  \n  // console.log(orders)\n\n  useEffect(() => {\n    dispatch(productsInf({}));\n  }, [dispatch]);\n  return (\n    <ContentContainer>\n      <ContentBlock>\n\n        <UserNameFilter dataFactory={productsInf} plholder=\"Product  Name\"/>\n        <ProductsAll products={products} />\n        \n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Products from \"components/Products/Products\";\n\nexport default function ProductsPage() {\n  return (\n    <Products />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;\n"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","color","props","prop","FilterConteiner","FilterForm","_templateObject2","InputFilter","_templateObject3","Button","_templateObject4","CustomButton","_ref","className","label","onClick","icon","_jsxs","type","children","_jsx","FilterIcon","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","width","height","href","concat","sprite","getColor","getBackgroundColor","getStatusColor","getBackgroundStatusColor","getActiveColor","getBackgroundActiveColor","StatucColor","_ref2","ProductsAll","products","console","log","data","map","category","stock","suppliers","price","customCellRenderer","rowIndex","columnId","content","style","borderRight","paddingLeft","Cell","AllConteinerBigTable","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","item","Products","useSelector","selectProductsInf","useEffect","productsInf","ContentContainer","ContentBlock","ProductsPage","selectDataInf","state","pharmacy","dashboarData","selectOrdersInf","ordersData","selectSuppliersInf","suppliersData","productsData","selectCustomersInf","customersData"],"sourceRoot":""}