{"version":3,"file":"static/js/746.e6437756.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/CustomButton/CustomButton.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/UserNameFilter/UserNameFilter.styled.js","components/UserNameFilter/UserNameFilter.jsx","components/Utils/utils.jsx","components/OrdersAll/OrdersAll.styled.js","components/OrdersAll/OrdersAll.jsx","components/Orders/Orders.jsx","pages/OrdersPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.4); \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon, width }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" width={width} >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const PaginationConteiner = styled.div`\n  display: flex;\n  justify-content: center; \n  align-items: center; \n`\n\nexport const PaginationButton = styled.button`\n  background: ${(props) => props.disabled ? color.greenLight : color.greenSupperLight}; /* Более тусклый фон для активной (отключенной) страницы */\n  margin-right: 17px;\n  width: 9px;\n  height: 9px;\n  border-radius: 50%;\n  \n  &:hover {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.7); \n  }\n\n  &:disabled {\n    cursor: default;\n    background: ${color.greenLight};\n    scale: 1.25;\n  }\n`;\n","import { PaginationButton, PaginationConteiner } from \"./Pagination.styled\";\n\nexport const Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const pages = [...Array(totalPages).keys()].map(num => num + 1);\n  return (\n    <PaginationConteiner>\n      {pages.map(page => (\n        <PaginationButton\n          key={page}\n          disabled={page === currentPage}\n          onClick={() => onPageChange(page)}\n        >\n          {/* {page} */}\n        </PaginationButton>\n      ))}      \n    </PaginationConteiner>\n  );\n};\n","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.blackColorSecondary};\n  }\n`;\n\n// export const Button = styled.div`\n//   width: 116px;\n// `;","import { useFormik } from \"formik\";\nimport {  FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\n// import { customersInf, ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n// import { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function UserNameFilter({dataFactory, plholder, setFilterName, setCurrentPage }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n//   const customers = useSelector(selectCustomersInf);  \n// console.log(customers)\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setCurrentPage(1)\n      setFilterName( values.userName )\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setCurrentPage(1)\n    setFilterName( '' )\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <CustomButton label=\"Rest\" onClick={() => handleReset()} width=\"116px\"/>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n\nexport const getActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenLight;\n    case 'Deactive':\n      return color.red;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenSecondary;\n    case 'Deactive':\n      return color.redSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n","import { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\n\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`","import { AllConteinerBigTable, AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport { StatucColor } from \"./OrdersAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\n\nexport default function OrdersAll({ orders, currentPage }) { \n  const data = orders ? orders.map(({ photo, name, address, products, order_date, price, status }) => [ photo, name, address, products, order_date, price, status ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'status') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n\n    if (columnId === 'order') {\n      const date = new Date(content);\n      content = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    }\n\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : content}        \n      </Cell>\n    );\n  };\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={rowData[0]} alt={rowData[1]} style={{ width: '36px', height: '36px', marginRight: '10px', borderRadius: '50%' }} />\n          <p>{rowData[1]}</p>\n        </div>\n      </Cell>\n    );\n  };\n\n  return (   \n    <AllConteinerBigTable>\n      <TableHeader>All orders</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n          key={`table-${currentPage}-${data[0]}`}\n          numRows={data.length} \n          defaultRowHeight={76} \n          columnWidths={[265, 218, 191, 232, 184, 150 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"User Info\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n          <Column name=\"Address\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'address', data.map(item => item[2]))} />\n          <Column name=\"Products\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'products', data.map(item => item[3]))} />\n          <Column name=\"Order date\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'order', data.map(item => item[4]))} />\n          <Column name=\"Price\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'price', data.map(item => item[5]))} />\n          <Column name=\"Status\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'status', data.map(item => item[6]))} />\n        </Table2>\n      </AllConteinersTable>\n    </AllConteinerBigTable>\n  )\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectOrdersInf } from \"../../redux/ePharmacy/selector\";\nimport { ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useEffect, useState } from \"react\";\nimport OrdersAll from \"components/OrdersAll/OrdersAll\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { Pagination } from \"components/Pagination/Pagination\";\n\nexport default function Orders() {  \n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrdersInf);  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterName, setFilterName] = useState('');\n  const limitPerPage = 5;\n\n  useEffect(() => {\n    dispatch(ordersInf({ page: currentPage, limit: limitPerPage, name: '' || filterName }));\n  }, [dispatch, currentPage, limitPerPage, filterName]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n    // Предполагается, что ваш API возвращает общее количество доступных элементов\n  const totalOrders = orders.total || 0;\n  const totalPages = Math.ceil(totalOrders / limitPerPage);\n\n  return (    \n    <ContentContainer>\n      <ContentBlock>\n        <UserNameFilter  dataFactory={ordersInf} setFilterName={setFilterName} setCurrentPage={setCurrentPage} />\n\n        <div>\n          <OrdersAll orders={orders.orders} currentPage={currentPage} />\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Orders from \"components/Orders/Orders\";\n\nexport default function OrdersPage() {\n  return (\n    <Orders />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n// export const selectProductsInf = (state) => state.pharmacy.productsData;\n// export const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;\n"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","width","color","props","prop","CustomButton","className","label","onClick","icon","_jsxs","type","children","_jsx","FilterIcon","PaginationConteiner","PaginationButton","_templateObject2","disabled","Pagination","currentPage","totalPages","onPageChange","pages","_toConsumableArray","Array","keys","map","num","page","FilterConteiner","FilterForm","InputFilter","_templateObject3","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","setFilterName","setCurrentPage","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","height","href","concat","sprite","getColor","getBackgroundColor","getStatusColor","getBackgroundStatusColor","getActiveColor","getBackgroundActiveColor","StatucColor","_ref2","OrdersAll","orders","data","photo","address","products","order_date","price","status","customCellRenderer","rowIndex","columnId","content","style","borderRight","Date","toLocaleDateString","year","month","day","Cell","AllConteinerBigTable","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","rowData","paddingLeft","display","alignItems","src","alt","marginRight","borderRadius","customCellName","item","Orders","useSelector","selectOrdersInf","_useState3","_useState4","filterName","useEffect","ordersInf","limit","totalOrders","total","Math","ceil","ContentContainer","ContentBlock","OrdersPage","selectDataInf","state","pharmacy","dashboarData","ordersData","selectSuppliersInf","suppliersData","selectProductsInf","productsData","selectCustomersInf","customersData"],"sourceRoot":""}