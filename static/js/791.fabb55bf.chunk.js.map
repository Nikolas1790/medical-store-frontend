{"version":3,"file":"static/js/791.fabb55bf.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/UserNameFilter/UserNameFilter.styled.js","components/CustomButton/CustomButton.jsx","components/UserNameFilter/UserNameFilter.jsx","components/Utils/utils.jsx","components/OrdersAll/OrdersAll.styled.js","components/OrdersAll/OrdersAll.jsx","components/Pagination/Pagination.jsx","components/Orders/Orders.jsx","pages/OrdersPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: 100%;\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.textColorSecondary};\n  }\n`;\n\nexport const Button = styled.div`\n  width: 116px;\n`;","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import { useFormik } from \"formik\";\nimport { Button, FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\n// import { customersInf, ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n// import { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function UserNameFilter({dataFactory, plholder, setCe }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n//   const customers = useSelector(selectCustomersInf);  \n// console.log(customers)\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setCe( values.userName )\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setCe( '' )\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <Button><CustomButton label=\"Rest\" onClick={() => handleReset()}/></Button>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n\nexport const getActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenLight;\n    case 'Deactive':\n      return color.red;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenSecondary;\n    case 'Deactive':\n      return color.redSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};","import { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\n\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`","import { AllConteinerBigTable, AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport { StatucColor } from \"./OrdersAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\n\nexport default function OrdersAll({ orders, currentPage }) { \n  console.log(currentPage)\n  const data = orders ? orders.map(({ photo, name, address, products, order_date, price, status }) => [ photo, name, address, products, order_date, price, status ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'status') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n\n    if (columnId === 'order') {\n      const date = new Date(content);\n      content = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    }\n\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : content}        \n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={rowData[0]} alt={rowData[1]} style={{ width: '36px', height: '36px', marginRight: '10px', borderRadius: '50%' }} />\n          <p>{rowData[1]}</p>\n        </div>\n      </Cell>\n    );\n  };\n  console.log(orders)\n  return (   \n    <AllConteinerBigTable>\n      <TableHeader>All orders</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n          key={`table-${currentPage}`}\n          numRows={data.length} \n          defaultRowHeight={76} \n          columnWidths={[265, 218, 191, 232, 184, 150 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"User Info\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n          <Column name=\"Address\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'address', data.map(item => item[2]))} />\n          <Column name=\"Products\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'products', data.map(item => item[3]))} />\n          <Column name=\"Order date\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'order', data.map(item => item[4]))} />\n          <Column name=\"Price\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'price', data.map(item => item[5]))} />\n          <Column name=\"Status\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'status', data.map(item => item[6]))} />\n        </Table2>\n      </AllConteinersTable>\n    </AllConteinerBigTable>\n  )\n}","// Pagination.jsx\nexport const Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  // Массив кнопок пагинации\n  // (предполагается, что totalPages - это общее количество страниц)\n  console.log(totalPages)\n  const pages = [...Array(totalPages).keys()].map(num => num + 1);\n\n  return (\n    <div className=\"pagination\">\n      {pages.map(page => (\n        <button\n          key={page}\n          disabled={page === currentPage}\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </button>\n      ))}\n      \n      {/* Индикаторы для дополнительной навигации (если нужны) */}\n      <button>...</button>\n    </div>\n  );\n};\n","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectOrdersInf } from \"../../redux/ePharmacy/selector\";\nimport { ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useEffect, useState } from \"react\";\nimport OrdersAll from \"components/OrdersAll/OrdersAll\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { Pagination } from \"components/Pagination/Pagination\";\n\nexport default function Orders() {  \n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrdersInf);  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [ce, setCe] = useState('');\n\n  const limitPerPage = 5;\n  console.log(orders)\n\n  // useEffect(() => {\n  //   dispatch(ordersInf({}));\n  // }, [dispatch]);\n  useEffect(() => {\n    console.log(`Making request for page: ${currentPage}`);\n    dispatch(ordersInf({ page: currentPage, limit: limitPerPage, name: '' || ce }));\n  }, [dispatch, currentPage, limitPerPage, ce]);\n\n  const handlePageChange = (page) => {\n    console.log(`Page change clicked: ${page}`);\n    setCurrentPage(page);\n  };\n    // Предполагается, что ваш API возвращает общее количество доступных элементов\n    const totalOrders = orders.total || 0;\n    const totalPages = Math.ceil(totalOrders / limitPerPage);\n\n\n  return (    \n    <ContentContainer>\n      <ContentBlock>\n\n        <UserNameFilter  dataFactory={ordersInf} setCe={setCe} />\n        <div>\n          <OrdersAll orders={orders.orders} currentPage={currentPage} />\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Orders from \"components/Orders/Orders\";\n\nexport default function OrdersPage() {\n  return (\n    <Orders />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;\n"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","color","props","prop","FilterConteiner","FilterForm","_templateObject2","InputFilter","_templateObject3","Button","_templateObject4","CustomButton","_ref","className","label","onClick","icon","_jsxs","type","children","_jsx","FilterIcon","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","setCe","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","width","height","href","concat","sprite","getColor","getBackgroundColor","getStatusColor","getBackgroundStatusColor","getActiveColor","getBackgroundActiveColor","StatucColor","_ref2","OrdersAll","orders","currentPage","console","log","data","map","photo","address","products","order_date","price","status","customCellRenderer","rowIndex","columnId","content","style","borderRight","Date","toLocaleDateString","year","month","day","Cell","AllConteinerBigTable","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","rowData","paddingLeft","display","alignItems","src","alt","marginRight","borderRadius","customCellName","item","Pagination","totalPages","onPageChange","pages","_toConsumableArray","Array","keys","num","page","disabled","Orders","useSelector","selectOrdersInf","setCurrentPage","_useState3","_useState4","ce","useEffect","ordersInf","limit","totalOrders","total","Math","ceil","ContentContainer","ContentBlock","OrdersPage","selectDataInf","state","pharmacy","dashboarData","ordersData","selectSuppliersInf","suppliersData","selectProductsInf","productsData","selectCustomersInf","customersData"],"sourceRoot":""}