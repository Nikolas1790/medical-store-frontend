{"version":3,"file":"static/js/757.e87a360e.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/CustomButton/CustomButton.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/UserNameFilter/UserNameFilter.styled.js","components/UserNameFilter/UserNameFilter.jsx","components/Utils/utils.jsx","components/ProductsAll/ProductsAll.styled.js","components/ActionBlock/ActionBlock.styled.js","components/PortalModal/PortalModal.styled.js","components/PortalModal/PortalModal.jsx","components/ProductModal/ProductModal.styled.js","components/CustomButtonCansel/CustomButtonCansel.styled.js","components/CustomButtonCansel/CustomButtonCansel.jsx","components/ProductModal/ProductModal.jsx","components/ActionBlock/ActionBlock.jsx","components/ProductsAll/ProductsAll.jsx","components/Products/Products.styled.js","components/Products/Products.jsx","pages/ProductsPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.4); \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon, width }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" width={width} >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const PaginationConteiner = styled.div`\n  display: flex;\n  justify-content: center; \n  align-items: center; \n`\n\nexport const PaginationButton = styled.button`\n  background: ${(props) => props.disabled ? color.greenLight : color.greenSupperLight}; /* Более тусклый фон для активной (отключенной) страницы */\n  margin-right: 17px;\n  width: 9px;\n  height: 9px;\n  border-radius: 50%;\n  \n  &:hover {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.7); \n  }\n\n  &:disabled {\n    cursor: default;\n    background: ${color.greenLight};\n    scale: 1.25;\n  }\n`;\n","import { PaginationButton, PaginationConteiner } from \"./Pagination.styled\";\n\nexport const Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const pages = [...Array(totalPages).keys()].map(num => num + 1);\n  return (\n    <PaginationConteiner>\n      {pages.map(page => (\n        <PaginationButton\n          key={page}\n          disabled={page === currentPage}\n          onClick={() => onPageChange(page)}\n        >\n          {/* {page} */}\n        </PaginationButton>\n      ))}      \n    </PaginationConteiner>\n  );\n};\n","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.blackColorSecondary};\n  }\n`;\n\n// export const Button = styled.div`\n//   width: 116px;\n// `;","import { useFormik } from \"formik\";\nimport {  FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\n// import { customersInf, ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n// import { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function UserNameFilter({dataFactory, plholder, setFilterName, setCurrentPage }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n//   const customers = useSelector(selectCustomersInf);  \n// console.log(customers)\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setCurrentPage(1)\n      setFilterName( values.userName )\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setCurrentPage(1)\n    setFilterName( '' )\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <CustomButton label=\"Rest\" onClick={() => handleReset()} width=\"116px\"/>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const AVAILABLE_CATEGORIES = [\n  'Medicine', 'Head', 'Hand', 'Dental Care', 'Skin Care', 'Eye Care', 'Vitamins & Supplements', 'Orthopedic Products', 'Baby Care'\n];\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n\nexport const getActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenLight;\n    case 'Deactive':\n      return color.red;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenSecondary;\n    case 'Deactive':\n      return color.redSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n","import { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\n\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`\n\n// export const ActionConteiner = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: 8px;\n\n// `","import styled from 'styled-components'\n\nexport const ActionConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n`","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Modal = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;    \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${color.blackColorSecondary};    //\n    overflow: auto;\n    z-index:5;\n\n    transform: scale(0);\n    &.active {\n        transform: scale(1);\n    }\n`;","import ReactDOM from 'react-dom';\nimport React, { useEffect } from 'react';\nimport { Modal } from './PortalModal.styled';\n\nexport default function PortalModal({ active, setActive, children }) {\n  useEffect(() => {\n    const closeModal = (e) => {\n      if (e.key === 'Escape') {\n        setActive(false);\n      }\n    };\n\n    const handleBodyScroll = (disableScroll) => {\n      if (disableScroll) {        \n        document.body.classList.add('no-scroll');\n      } else {        \n        document.body.classList.remove('no-scroll');\n      }\n    };\n\n    if (active) {        \n      document.addEventListener('keydown', closeModal);\n      handleBodyScroll(true);\n    } else {        \n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    };\n  }, [active, setActive]);\n\n  return ReactDOM.createPortal(\n    <Modal className={active ? 'active' : ''} onClick={() => setActive(false)}>\n      <div onClick={(e) => e.stopPropagation()}>{children}</div>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nexport const StyledSimpleBar = styled(SimpleBar)`\n  /* Задайте общие стили для контейнера */\n  .simplebar-scrollbar {\n    background: rgba(255, 255, 255, 0.4) !important;\n    width: 6px !important;\n    height: 65px !important;\n    border-radius: 12px !important;\n  }\n\n  .simplebar-track.simplebar-vertical {\n    width: 6px !important;\n    right: -10px !important; /* Смещение вправо */\n  }\n\n  .simplebar-track.simplebar-vertical .simplebar-scrollbar:before {\n    background-color: #dcdcdc;\n  }\n\n  .simplebar-track.simplebar-vertical .simplebar-scrollbar:hover:before {\n    background-color: #bcbcbc;\n  }\n`;\n\n\n\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  width: 536px;\n  min-height: 392px;\n  background: ${color.white};\n  border-radius: 12px;\n  padding: 40px ;\n\n  /* @media (min-width: 768px) {\n    width: 500px;\n    height: 483px;\n    padding: 50px ;\n  } */\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n  transition: transform 0.25s linear; \n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n////////////////////////////////////\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nexport const InputConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ColumnConteiner = styled.div`\n    display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const Input = styled.input`\n  width: 224px;\nheight: 44px;\nborder: 1px solid rgba(29, 30, 33, 0.1);\nborder-radius: 60px;\nbackground: rgb(255, 255, 255);\npadding: 13px 18px;\n\nborder-color: ${({ haserror }) => haserror ? 'red' : 'rgba(29, 30, 33, 0.1)'};\n`;\n\n\n\n///////////////////////////////////////////////// 222\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n\n  font-weight: 400;\n  font-size: 12px;\n  height: 44px;\n  border-radius: 60px; \n  border: 1px solid ${color.blackPrimarySecondary};\n  outline: none;\n  cursor: pointer;\n\n  background-color: ${color.white};\n  padding: 13px 18px;\n\n  width: 224px;\n  border-color: ${({ haserror }) => haserror ? 'red' : 'rgba(29, 30, 33, 0.1)'};\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 112%;\n  left: 0;\n  background-color: ${color.greenLight};\n\n  display: ${({ open }) => (open ? 'block' : 'none')};\n  /* overflow-y: auto; */\n  /* overflow-x: hidden; */\n  max-height: 140px; \n  /* list-style: none; */\n  padding: 13px 18px;\n  margin: 0;\n\n  width: 100%;\n  height: 140px;\n  border-radius: 15px;\n\n\n\n`;\n\nexport const DropdownItem = styled.li`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.whiterTranslucent};\n  padding: 3px;\n  cursor: pointer;  \n\n  &:hover {\n    color: ${color.white};\n  }\n`;\n\n\n/////////////////////////////////////////////////// 222\n\n\n\nexport const BtnConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 40px;\n`;\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 60px;\n  color: ${color.blackColorSecondary};\n  background: ${color.blackPrimarySecondary};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    color: ${color.greenLight};\n    background: ${color.white};  \n    border: 1px solid ${color.greenLight};\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.4); \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import { CustomBtn } from \"./CustomButtonCansel.styled\";\n\nexport default function CustomButtonCansel({ className, label, onClick, icon, width }) {\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" width={width} >\n      {label}\n    </CustomBtn>\n  );\n}\n\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { BtnConteiner, ClosingSymbol, ColumnConteiner, Conteiner, Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg, Input, InputConteiner, StyledSimpleBar, Title } from \"./ProductModal.styled\";\nimport sprite from '../../img/sprite.svg';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport CustomButtonCansel from \"components/CustomButtonCansel/CustomButtonCansel\";\nimport { useEffect, useRef, useState } from 'react';\nimport { AVAILABLE_CATEGORIES } from 'components/Utils/utils';\nimport { useDispatch } from 'react-redux';\nimport { addProduct } from '../../redux/ePharmacy/operations';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Product info is required'),\n  category: Yup.string().oneOf(AVAILABLE_CATEGORIES, 'Invalid category').required('Category is required'),\n  stock: Yup.number().required('Stock is required').positive('Stock must be positive'),\n  suppliers: Yup.string().required('Suppliers are required'),\n  price: Yup.number().required('Price is required').positive('Price must be positive'),\n});\n\nexport default function ProductModals({ closeModals, isUpdate, existingProduct }) {  \n  const [selectedLevels, setSelectedLevels] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  // const [attemptedSubmit, setAttemptedSubmit] = useState(false);\n  const dropdownRef = useRef(null);\nconst dispatch = useDispatch();\nconst q = existingProduct?.[2];\n\nconsole.log(q)\n\nuseEffect(() => {\n  const handleOutsideClick = (event) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsDropdownOpen(false); // Исправлено на false\n    }\n  };\n  document.addEventListener('mousedown', handleOutsideClick);\n  return () => document.removeEventListener('mousedown', handleOutsideClick);\n}, []);\n  \nconst initialValues = isUpdate ? {\n  name: existingProduct?.[0],\n  category: existingProduct?.[1],\n  stock: q, // Assuming stock is a number and needs to be converted to string\n  suppliers: existingProduct?.[3],\n  price: existingProduct?.[4].toString(), // Assuming price is a number and needs to be converted to string\n} : {\n  name: '',\n  category: '',\n  stock: '',\n  suppliers: '',\n  price: '',\n};\n\n    // Инициализация Formik\n    const formik = useFormik({\n      initialValues: initialValues,\n      validationSchema,\n      onSubmit: (values, { resetForm }) => {\n           dispatch(addProduct(values))  \n           resetForm(); \n           closeModals()\n      },\n    });  \n    // const showRedBorder = (fieldName) => attemptedSubmit && formik.touched[fieldName] && Boolean(formik.errors[fieldName]);\n    const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen);\n    const handleItemClick = (level) => {\n      setSelectedLevels(level); // Обновление локального состояния\n      formik.setFieldValue('category', level); // Обновление состояния Formik\n      setIsDropdownOpen(false); // Закрытие выпадающего списка\n    };\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={26} height={26}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <Title>{ isUpdate  ? 'Edit product' :'Add a new product'}</Title>\n      <div>\n      <form onSubmit={formik.handleSubmit}>\n        <InputConteiner>\n          <ColumnConteiner>\n            <Input\n              name=\"name\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur} \n              value={formik.values.name}\n              placeholder=\"Product Info\"\n              haserror={formik.touched.name && formik.errors.name}\n            />\n        \n            <Input\n              name=\"stock\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur} \n              value={formik.values.stock}\n              placeholder=\"Stock\"\n              haserror={formik.touched.stock && formik.errors.stock}\n            />\n\n            <Input\n              name=\"price\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur} \n              value={formik.values.price}\n              placeholder=\"Price\"\n              haserror={formik.touched.price && formik.errors.price}\n            />\n          </ColumnConteiner>\n\n          <ColumnConteiner>    \n                <Dropdown ref={dropdownRef}>\n                  <DropdownSvg width={20} height={20} onClick={toggleDropdown} >\n                      <use href={`${sprite}#icon-chevron-${isDropdownOpen ? 'up' : 'down'}`}  />\n                  </DropdownSvg>\n                  <DropdownButton  onClick={toggleDropdown} haserror={formik.touched.category && formik.errors.category}>{selectedLevels || \"Category\" }</DropdownButton>  \n                  <DropdownList open={isDropdownOpen}>\n                    <StyledSimpleBar style={{ maxHeight: 126 }}>\n                      {AVAILABLE_CATEGORIES.map((category, index) => (\n                        <DropdownItem key={index} onClick={() => handleItemClick(category)}>\n                          {category}\n                        </DropdownItem>\n                      ))}\n                    </StyledSimpleBar>\n                  </DropdownList>                      \n                </Dropdown>\n\n            <Input\n              name=\"suppliers\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur} \n              value={formik.values.suppliers}\n              placeholder=\"Suppliers\"\n              haserror={formik.touched.suppliers && formik.errors.suppliers}\n            />\n          </ColumnConteiner>\n        </InputConteiner>\n\n          <BtnConteiner>\n            <CustomButton width=\"133px\" label=\"Add\"  type='submit'/>\n            <CustomButtonCansel width=\"133px\" label=\"Cansel\" onClick={closeModals} />        \n          </BtnConteiner>\n        </form>\n      </div>\n    </Conteiner>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { ActionConteiner } from './ActionBlock.styled';\nimport { deleteProduct } from '../../redux/ePharmacy/operations';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport { useState } from 'react';\nimport ProductModals from 'components/ProductModal/ProductModal';\n\nexport default function ActionBlock({ id, item }) { \n  const [openModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n console.log(item)\n  \n  const dellItem = () => {\n    dispatch(deleteProduct(id))\n  };\n  \n\n  return (        \n    <ActionConteiner>\n      <button >\n        <svg width={32} height={32} onClick={() => setOpenModal(true)}>\n          <use href={`${sprite}#icon-btn-edit`} />\n        </svg>\n      </button>\n\n      <button onClick={dellItem}>\n        <svg width={32} height={32}>\n          <use href={`${sprite}#icon-btn-dell`} />\n        </svg>\n      </button>\n        <PortalModal active={openModal} setActive={setOpenModal}>\n          <ProductModals closeModals={() => setOpenModal()} isUpdate={true} existingProduct={item} />\n        </PortalModal>\n    </ActionConteiner> \n  )\n}","import { AllConteinerBigTable, AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport {  StatucColor } from \"./ProductsAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\nimport ActionBlock from \"components/ActionBlock/ActionBlock\";\n\nexport default function ProductsAll({ products }) { \n  const data = products ? products.map(({ name, category, stock, suppliers, price, _id }) => [ name, category, stock, suppliers, price, _id ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'actions') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\nconsole.log(content)\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : (\n          columnId === 'actions' ? <ActionBlock id={content} item={content}/> : content)}  \n      </Cell>\n    );\n  };\n\n  return (   \n    <AllConteinerBigTable>\n      <TableHeader>All products</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n         key={`table-${data}`}\n          numRows={data.length} \n          defaultRowHeight={76} \n          columnWidths={[276, 230, 199, 226, 163, 146 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Product Info\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'name', data.map(item => item[0]))} />\n          <Column name=\"Category\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'category', data.map(item => item[1]))} />\n          <Column name=\"Stock\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'stocks', data.map(item => item[2]))} />\n          <Column name=\"Suppliers\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'suppliers', data.map(item => item[3]))} />\n          <Column name=\"Price\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'price', data.map(item => item[4]))} />\n          <Column name=\"Action\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'actions', data)} />\n        </Table2>\n      </AllConteinersTable>\n    </AllConteinerBigTable>\n  )\n}","// import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const AddProductConteiner = styled.button`\n  display: flex;\n  justify-content: center; \n  align-items: center; \n  gap: 8px;\n`\nexport const AddProduct = styled.p`\n  font-size: 14px;\n`","import { ContentBlock, ContentContainer, FilterAddConteiner } from \"common/GiobalStyles\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { productInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectProductsInf } from \"../../redux/ePharmacy/selector\";\nimport { useEffect, useState } from \"react\";\nimport ProductsAll from \"components/ProductsAll/ProductsAll\";\nimport { Pagination } from \"components/Pagination/Pagination\";\nimport { AddProduct, AddProductConteiner } from \"./Products.styled\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport ProductModals from \"components/ProductModal/ProductModal\";\n\nexport default function Products() {  \n  const dispatch = useDispatch();\n  const products = useSelector(selectProductsInf);  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterName, setFilterName] = useState('');\n  const [openModal, setOpenModal] = useState(false);\n  const limitPerPage = 5;\n// console.log(products)\n  useEffect(() => {\n    dispatch(productInf({ page: currentPage, limit: limitPerPage, name: '' || filterName }));\n  }, [dispatch, currentPage, limitPerPage, filterName, products.total]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n  \n  const totalProducts = products.total || 0;\n  const totalPages = Math.ceil(totalProducts / limitPerPage);\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <FilterAddConteiner>\n          <UserNameFilter dataFactory={productInf} plholder=\"Product Name\" setFilterName={setFilterName} setCurrentPage={setCurrentPage}/>\n          <AddProductConteiner onClick={() => setOpenModal(true)} >\n\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <rect width=\"42\" height=\"42\" rx=\"21\" fill=\"#59B17A\"/>\n              <path d=\"M27 21H15M21 15V27V15Z\" stroke=\"white\" />\n            </svg>\n\n            <AddProduct>Add a new product</AddProduct>\n          </AddProductConteiner>\n        </FilterAddConteiner>\n\n        <div>\n          <ProductsAll products={products.products} />\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n        \n        <PortalModal active={openModal} setActive={setOpenModal}>\n          <ProductModals closeModals={() => setOpenModal()} />\n        </PortalModal>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}\n\n\n","import Products from \"components/Products/Products\";\n\nexport default function ProductsPage() {\n  return (\n    <Products />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n// export const selectProductsInf = (state) => state.pharmacy.productsData;\n// export const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;\n"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","width","color","props","prop","CustomButton","className","label","onClick","icon","_jsxs","type","children","_jsx","FilterIcon","PaginationConteiner","PaginationButton","_templateObject2","disabled","Pagination","currentPage","totalPages","onPageChange","pages","_toConsumableArray","Array","keys","map","num","page","FilterConteiner","FilterForm","InputFilter","_templateObject3","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","setFilterName","setCurrentPage","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","AVAILABLE_CATEGORIES","height","href","concat","sprite","getColor","getBackgroundColor","getStatusColor","getBackgroundStatusColor","getActiveColor","getBackgroundActiveColor","StatucColor","_ref2","ActionConteiner","Modal","PortalModal","active","setActive","useEffect","closeModal","e","key","handleBodyScroll","disableScroll","document","body","classList","add","remove","addEventListener","removeEventListener","ReactDOM","stopPropagation","getElementById","StyledSimpleBar","SimpleBar","Conteiner","ClosingSymbol","Title","_templateObject4","InputConteiner","_templateObject5","ColumnConteiner","_templateObject6","Input","_templateObject7","haserror","Dropdown","_templateObject8","DropdownSvg","_templateObject9","DropdownButton","_templateObject10","DropdownList","_templateObject11","_ref3","open","DropdownItem","_templateObject12","BtnConteiner","_templateObject13","CustomButtonCansel","category","oneOf","stock","positive","suppliers","price","ProductModals","closeModals","isUpdate","existingProduct","selectedLevels","setSelectedLevels","_useState3","_useState4","isDropdownOpen","setIsDropdownOpen","dropdownRef","useRef","q","console","log","handleOutsideClick","event","current","contains","target","toString","addProduct","toggleDropdown","onBlur","handleBlur","touched","errors","ref","style","maxHeight","index","level","setFieldValue","ActionBlock","item","openModal","setOpenModal","deleteProduct","ProductsAll","products","data","_id","customCellRenderer","rowIndex","columnId","content","borderRight","paddingLeft","Cell","AllConteinerBigTable","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","AddProductConteiner","AddProduct","Products","useSelector","selectProductsInf","filterName","_useState5","_useState6","productInf","limit","total","totalProducts","Math","ceil","ContentContainer","ContentBlock","FilterAddConteiner","viewBox","fill","xmlns","rx","d","stroke","ProductsPage","selectDataInf","state","pharmacy","dashboarData","selectOrdersInf","ordersData","selectSuppliersInf","suppliersData","productsData","selectCustomersInf","customersData"],"sourceRoot":""}