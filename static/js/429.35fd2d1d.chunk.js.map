{"version":3,"file":"static/js/429.35fd2d1d.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.jsx","components/DashboardRecentCustomers/DashboardRecentCustomers.styled.js","components/DashboardRecentCustomers/DashboardRecentCustomers.jsx","components/DashboardStatistic/DashboardStatistic.styled.js","components/DashboardStatistic/DashboardStatistic.jsx","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const  TableConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const  TableBlockItem = styled.div`\n\n  min-width: 630px;\n  height: 512px;\n  /* border: 1px solid red; */\n\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n  background: rgb(255, 255, 255);\n  overflow: hidden;\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nconst getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return 'black';\n  }\n};\n\nconst getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return 'black';\n  }\n};\n\n\nexport const IncomeExpensesTableConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n  .bp5-table-header {\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; \n  }\n  .bp5-table-column-name{\n    margin-left: -10px;\n  }\n\n  .bp5-table-header::after {\n    content: ''; \n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n\n  .bp5-table-cell {  \n    position: relative; \n    display: flex;\n    align-items: center;\n    font-size: 16px;\n    background: ${color.white};\n    padding-left: 20px;\n    box-shadow: none; \n    padding: 0;\n\n  }\n  .bp5-table-cell::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n`\n\nexport const CellType = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content:center;\n  color: ${({ type }) => getColor(type)};\n  background: ${({ type }) => getBackgroundColor(type)};;\n  width: 80px;\n  height: 25px;\n  font-size: 14px;\n  border-radius: 40px;\n\n`\n\nexport const CellSum = styled.p`\n  position: relative;\n  color: ${({ type }) => getColor(type)};\n\n  &::after {\n    content: ${({ type }) => (type === 'Error' ? '\" \"' : 'none')};\n    position: absolute;\n    top: 58%;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: ${color.blackPrimary};\n    transform: translateY(-50%);\n  }\n`;","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { CellSum, CellType, IncomeExpensesTableConteiner } from \"./DashboardIncomeExpenses.styled\";\n\nexport default function DashboardIncomeExpenses() {  \n  const dispatch = useDispatch();\n  const { incomeExpenses } = useSelector(selectDataInf);  \n  const data = incomeExpenses ? incomeExpenses.map(({ name, amount, type }) => [type, name, amount]) : [];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]); \n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    const cellType = data[rowIndex][0]; // Предположим, что тип операции находится в первом элементе массива для каждой строки.\n    const cellValue = data[rowIndex]\n    let style = {};\n    if (columnId === 'sum') {\n      style.justifyContent = 'flex-end';\n    }  \n\n    return (\n      <Cell style={style}>\n        {columnId === 'sum' ? ( <CellSum type={cellType}>{cellValue[2]}</CellSum> ) : (\n          columnId === 'type'? <CellType type={cellType}>{cellValue[0]}</CellType> : cellValue[1]\n        )}\n      </Cell>\n    );\n  };  \n  \n  return (\n    <TableBlockItem>\n      <TableHeader>Income/Expenses</TableHeader>\n      <IncomeExpensesTableConteiner>\n        <Table2 \n          numRows={data.length} \n          defaultRowHeight={65} \n          columnWidths={[120, 393, 77 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Today\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'type', data)} />\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'details', data)}/>\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'sum', data)} />\n        </Table2>\n      </IncomeExpensesTableConteiner>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const HeaderStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n  .bp5-table-header {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n    padding-left: 10px;\n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; //\n    border-bottom: 1px solid ${color.blackPrimarySecondary};\n  }\n\n  .bp5-table-header:not(:last-child)::after {\n    content: ''; \n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0; \n    border-right: 1px solid ${color.blackPrimarySecondary}; \n  }\n  \n  .bp5-table-column-header-cell:first-child .bp5-table-column-name {\n    margin-left: -20px;\n  }\n\n\n\n\n .bp5-table-cell { \n  display: flex;\n  align-items: center;\n  background: ${color.white};\n  font-size: 16px;\n  font-weight: 500;\n  padding-left: 20px;\n  box-shadow: none; //\n  border-bottom: 1px solid ${color.blackPrimarySecondary};\n  \n}\n`\n\nexport const NameCustomer = styled.span`\n  /* max-width: 100px; */\n`","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { HeaderStyle, NameCustomer } from \"./DashboardRecentCustomers.styled\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport color from \"common/GlobalColers\";\n\n\nexport default function DashboardRecentCustomers() {  \n  const dispatch = useDispatch();\n  const { recentCustomers } = useSelector(selectDataInf);  \n\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  const data = recentCustomers ? recentCustomers.map(({ name, email, spent, image }) => [ name, email, spent, image ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let style = {};\n    if ( columnId === 'email') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n    return (\n      <Cell style={style}>\n        {data[rowIndex]}        \n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={rowData[3]} alt={rowData[0]} style={{ width: '36px', height: '36px', marginRight: '10px' }} />\n          <NameCustomer>{rowData[0]}</NameCustomer>\n        </div>\n      </Cell>\n    );\n  };\n\n  return (    \n    <TableBlockItem>      \n      <TableHeader>Recent Customers</TableHeader>\n     \n      <HeaderStyle >\n      <Table2  \n        numRows={data.length} \n        defaultRowHeight={78} \n        columnWidths={[203, 269, 118 ]} \n        enableColumnResizing={false} \n        enableRowResizing={false} \n        enableRowHeader={false}\n      >\n        <Column name=\"Name\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n        <Column name=\"Email\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'email', data.map(item => item[1]))} />\n        <Column name=\"Spent\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'spent', data.map(item => item[2]))} />\n      </Table2>\n      </HeaderStyle>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StatisticConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const StatisticItem  = styled.li`\n  width: 240px;\n  height: 108px;\n  border-radius: 8px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  padding: 14px 18px;\n\n\n  fill: transparent;\n  stroke: ${color.blackPrimary};\n  &:first-child {\n    border-color: ${color.greenLight};\n  }\n`\nexport const StatisticTitleConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 28px;\n  \n`\n\nexport const StatisticSectionTitle = styled.h4`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.textColorSecondary};\n  \n`\nexport const StatisticValue = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.33;\n  \n`","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { StatisticConteiner, StatisticItem, StatisticSectionTitle, StatisticTitleConteiner, StatisticValue } from './DashboardStatistic.styled';\nimport { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\n\nexport default function DashboardStatistic() {  \n  const dispatch = useDispatch();\n  const data = useSelector(selectDataInf);\n  \n  const statistic = [\n    { name: \"products\", icon: \"#icon-streamline\", value: `${data.productsCount}` },\n    { name: \"suppliers\", icon: \"#icon-users\", value: `${data.suppliersCount}` },\n    { name: \"customers\", icon: \"#icon-users\", value: `${data.customersCount}` },\n  ];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  return (\n    <StatisticConteiner>\n      {statistic.map(link => (        \n        <StatisticItem key={link.name} >\n          <StatisticTitleConteiner>\n            <svg width={20} height={20}>\n              <use href={`${sprite}${link.icon}`} />\n            </svg>\n            <StatisticSectionTitle>All {link.name}</StatisticSectionTitle>\n          </StatisticTitleConteiner>\n          <StatisticValue>{data.customersCount ? link.value : 0}</StatisticValue>\n        </StatisticItem>\n      ))}\n    </StatisticConteiner>\n  );\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport DashboardIncomeExpenses from \"components/DashboardIncomeExpenses/DashboardIncomeExpenses\";\nimport DashboardRecentCustomers from \"components/DashboardRecentCustomers/DashboardRecentCustomers\";\nimport DashboardStatistic from \"components/DashboardStatistic/DashboardStatistic\";\nimport { TableConteiner } from \"./Dashboard.styled\";\n\n\nexport default function Dashboard() {  \n\n  return (\n    <ContentContainer>\n      <ContentBlock top=\"20px\" bottom=\"40px\" >\n        <DashboardStatistic />\n\n        <TableConteiner>\n          <DashboardRecentCustomers />\n          <DashboardIncomeExpenses />\n        </TableConteiner>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Dashboard from \"components/Dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return (\n    <Dashboard />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\n// export const selectStageWater = (state) => state.water;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n"],"names":["TableConteiner","styled","_templateObject","_taggedTemplateLiteral","TableBlockItem","_templateObject2","color","getColor","type","IncomeExpensesTableConteiner","CellType","_ref","_ref2","getBackgroundColor","CellSum","_templateObject3","_ref3","_ref4","DashboardIncomeExpenses","dispatch","useDispatch","incomeExpenses","useSelector","selectDataInf","data","map","name","amount","useEffect","dashboardInf","customCellRenderer","rowIndex","columnId","cellType","cellValue","style","justifyContent","_jsx","Cell","children","_jsxs","TableHeader","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","HeaderStyle","NameCustomer","DashboardRecentCustomers","recentCustomers","email","spent","image","borderRight","concat","rowData","paddingLeft","display","alignItems","src","alt","width","height","marginRight","customCellName","item","StatisticConteiner","StatisticItem","StatisticTitleConteiner","StatisticSectionTitle","_templateObject4","StatisticValue","_templateObject5","DashboardStatistic","statistic","icon","value","productsCount","suppliersCount","customersCount","link","href","sprite","Dashboard","ContentContainer","ContentBlock","top","bottom","DashboardPage","state","pharmacy","dashboarData","selectOrdersInf","ordersData"],"sourceRoot":""}