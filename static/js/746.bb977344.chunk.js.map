{"version":3,"file":"static/js/746.bb977344.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/UserNameFilter/UserNameFilter.styled.js","components/CustomButton/CustomButton.jsx","components/UserNameFilter/UserNameFilter.jsx","components/Utils/utils.jsx","components/OrdersAll/OrdersAll.styled.js","components/OrdersAll/OrdersAll.jsx","components/Orders/Orders.jsx","pages/OrdersPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: 100%;\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.textColorSecondary};\n  }\n`;\n\nexport const Button = styled.div`\n  width: 116px;\n`;","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import { useFormik } from \"formik\";\nimport { Button, FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\n// import { customersInf, ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n// import { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function UserNameFilter({dataFactory, plholder }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n//   const customers = useSelector(selectCustomersInf);  \n// console.log(customers)\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <Button><CustomButton label=\"Rest\" onClick={() => handleReset()}/></Button>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return 'black';\n  }\n};","import color from 'common/GlobalColers'\nimport { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\nexport const OrdersAllConteiner = styled.div`\n  width: 1280px;\n  height: 502px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n`\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`","import { AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport { OrdersAllConteiner, StatucColor } from \"./OrdersAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\n\nexport default function OrdersAll( {orders} ) { \n  const data = orders ? orders.map(({ photo, name, address, products, order_date, price, status }) => [ photo, name, address, products, order_date, price, status ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'status') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n\n    if (columnId === 'order') {\n      const date = new Date(content);\n      content = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    }\n\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : content}        \n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={rowData[0]} alt={rowData[1]} style={{ width: '36px', height: '36px', marginRight: '10px', borderRadius: '50%' }} />\n          <p>{rowData[1]}</p>\n        </div>\n      </Cell>\n    );\n  };\n  return (   \n    <OrdersAllConteiner>\n      <TableHeader>All orders</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n          numRows={data.length} \n          defaultRowHeight={76} \n          columnWidths={[265, 218, 191, 232, 184, 150 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"User Info\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n          <Column name=\"Address\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'address', data.map(item => item[2]))} />\n          <Column name=\"Products\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'products', data.map(item => item[3]))} />\n          <Column name=\"Order date\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'order', data.map(item => item[4]))} />\n          <Column name=\"Price\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'price', data.map(item => item[5]))} />\n          <Column name=\"Status\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'status', data.map(item => item[6]))} />\n        </Table2>\n      </AllConteinersTable>\n    </OrdersAllConteiner>\n  )\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectOrdersInf } from \"../../redux/ePharmacy/selector\";\nimport { ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useEffect } from \"react\";\nimport OrdersAll from \"components/OrdersAll/OrdersAll\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\n\nexport default function Orders() {  \n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrdersInf);  \n  // console.log(orders)\n\n  useEffect(() => {\n    dispatch(ordersInf({}));\n  }, [dispatch]);\n\n  return (    \n    <ContentContainer>\n      <ContentBlock>\n\n        <UserNameFilter  dataFactory={ordersInf} />\n        <OrdersAll orders={orders} />\n        \n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Orders from \"components/Orders/Orders\";\n\nexport default function OrdersPage() {\n  return (\n    <Orders />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;\n"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","color","props","prop","FilterConteiner","FilterForm","_templateObject2","InputFilter","_templateObject3","Button","_templateObject4","CustomButton","_ref","className","label","onClick","icon","_jsxs","type","children","_jsx","FilterIcon","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","width","height","href","concat","sprite","getColor","getBackgroundColor","getStatusColor","getBackgroundStatusColor","OrdersAllConteiner","StatucColor","_ref2","OrdersAll","orders","data","map","photo","address","products","order_date","price","status","customCellRenderer","rowIndex","columnId","content","style","borderRight","Date","toLocaleDateString","year","month","day","Cell","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","rowData","paddingLeft","display","alignItems","src","alt","marginRight","borderRadius","customCellName","item","Orders","useSelector","selectOrdersInf","useEffect","ordersInf","ContentContainer","ContentBlock","OrdersPage","selectDataInf","state","pharmacy","dashboarData","ordersData"],"sourceRoot":""}