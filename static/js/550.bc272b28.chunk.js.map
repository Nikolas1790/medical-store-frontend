{"version":3,"file":"static/js/550.bc272b28.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/DashboardRecentCustomers/DashboardRecentCustomers.styled.js","components/Utils/utils.jsx","components/OrdersUserNameFilter/OrdersUserNameFilter.styled.js","components/CustomButton/CustomButton.jsx","components/OrdersUserNameFilter/OrdersUserNameFilter.jsx","components/OrdersAll/OrdersAll.styled.js","components/OrdersAll/OrdersAll.jsx","components/Orders/Orders.jsx","pages/OrdersPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: 100%;\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const HeaderStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n  .bp5-table-header {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n    padding-left: 10px;\n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; //\n    border-bottom: 1px solid ${color.blackPrimarySecondary};\n  }\n\n  .bp5-table-header:not(:last-child)::after {\n    content: ''; \n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0; \n    border-right: 1px solid ${color.blackPrimarySecondary}; \n  }\n  \n  .bp5-table-column-header-cell:first-child .bp5-table-column-name {\n    margin-left: -20px;\n  }\n\n\n\n\n .bp5-table-cell { \n  display: flex;\n  align-items: center;\n  background: ${color.white};\n  font-size: 16px;\n  font-weight: 500;\n  padding-left: 20px;\n  box-shadow: none; //\n  border-bottom: 1px solid ${color.blackPrimarySecondary};\n  \n}\n`\n\nexport const NameCustomer = styled.span`\n  /* max-width: 100px; */\n`","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return 'black';\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return 'black';\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return 'black';\n  }\n};","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.textColorSecondary};\n  }\n`;\n\nexport const Button = styled.div`\n  width: 116px;\n`;","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import { useFormik } from \"formik\";\nimport { Button, FilterConteiner, FilterForm, InputFilter } from \"./OrdersUserNameFilter.styled\";\nimport { ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function OrdersUserNameFilter() {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setIsRestButtonVisible(\"true\")\n      dispatch(ordersInf({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setIsRestButtonVisible(false);\n    dispatch(ordersInf({}))\n    formik.resetForm();\n    // dispatch(fetchBooks({ page: 1, limit: 10  }))\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder=\"User Name\"\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <Button><CustomButton label=\"Rest\" onClick={() => handleReset()}/></Button>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers'\nimport { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\nexport const OrdersAllConteiner = styled.div`\n  width: 1280px;\n  height: 502px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n`\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`","import { TableHeader } from \"common/GiobalStyles\";\nimport { OrdersAllConteiner, StatucColor } from \"./OrdersAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { HeaderStyle, NameCustomer } from \"components/DashboardRecentCustomers/DashboardRecentCustomers.styled\";\nimport color from \"common/GlobalColers\";\n\nexport default function OrdersAll( {orders} ) { \n  const data = orders ? orders.map(({ photo, name, address, products, order_date, price, status }) => [ photo, name, address, products, order_date, price, status ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'status') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n\n    if (columnId === 'order') {\n      const date = new Date(content);\n      content = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    }\n\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : content}        \n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={rowData[0]} alt={rowData[1]} style={{ width: '36px', height: '36px', marginRight: '10px', borderRadius: '50%' }} />\n          <NameCustomer>{rowData[1]}</NameCustomer>\n        </div>\n      </Cell>\n    );\n  };\n  return (   \n    <OrdersAllConteiner>\n      <TableHeader>All orders</TableHeader>\n      \n      <HeaderStyle >\n      <Table2  \n        numRows={data.length} \n        defaultRowHeight={76} \n        columnWidths={[265, 218, 191, 232, 184, 150 ]} \n        enableColumnResizing={false} \n        enableRowResizing={false} \n        enableRowHeader={false}\n      >\n        <Column name=\"User Info\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n        <Column name=\"Address\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'address', data.map(item => item[2]))} />\n        <Column name=\"Products\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'products', data.map(item => item[3]))} />\n        <Column name=\"Order date\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'order', data.map(item => item[4]))} />\n        <Column name=\"Price\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'price', data.map(item => item[5]))} />\n        <Column name=\"Status\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'status', data.map(item => item[6]))} />\n      </Table2>\n      </HeaderStyle>\n    </OrdersAllConteiner>\n  )\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectOrdersInf } from \"../../redux/ePharmacy/selector\";\nimport { ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useEffect } from \"react\";\nimport OrdersUserNameFilter from \"components/OrdersUserNameFilter/OrdersUserNameFilter\";\nimport OrdersAll from \"components/OrdersAll/OrdersAll\";\n\nexport default function Orders() {  \n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrdersInf);  \n  // console.log(orders)\n\n  useEffect(() => {\n    dispatch(ordersInf({}));\n  }, [dispatch]);\n\n  return (    \n    <ContentContainer>\n      <ContentBlock>\n\n        <OrdersUserNameFilter />\n        {orders.length > 0 && <OrdersAll orders={orders} />}\n        \n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Orders from \"components/Orders/Orders\";\n\nexport default function OrdersPage() {\n  return (\n    <Orders />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\n// export const selectStageWater = (state) => state.water;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","color","props","prop","HeaderStyle","NameCustomer","_templateObject2","FilterIcon","_jsx","width","height","children","href","concat","sprite","getColor","type","getBackgroundColor","getStatusColor","getBackgroundStatusColor","FilterConteiner","FilterForm","InputFilter","_templateObject3","Button","_templateObject4","CustomButton","_ref","className","label","onClick","icon","_jsxs","validationSchema","Yup","userName","required","OrdersUserNameFilter","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","ordersInf","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","OrdersAllConteiner","StatucColor","_ref2","OrdersAll","orders","data","map","photo","address","products","order_date","price","status","customCellRenderer","rowIndex","columnId","content","style","borderRight","Date","toLocaleDateString","year","month","day","Cell","TableHeader","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","rowData","paddingLeft","display","alignItems","src","alt","marginRight","borderRadius","customCellName","item","Orders","useSelector","selectOrdersInf","useEffect","ContentContainer","ContentBlock","OrdersPage","selectDataInf","state","pharmacy","dashboarData","ordersData"],"sourceRoot":""}