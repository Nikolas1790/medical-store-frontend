{"version":3,"file":"static/js/695.272e4cf0.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/UserNameFilter/UserNameFilter.styled.js","components/UserNameFilter/UserNameFilter.jsx","components/CustomersAll/CustomersAll.styled.js","components/CustomersAll/CustomersAll.jsx","components/Customers/Customers.jsx","pages/CustomersPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const PaginationConteiner = styled.div`\n  display: flex;\n  justify-content: start; \n  align-items: center; \n  @media (min-width: 768px) {  \n    justify-content: center; \n  }\n`\n\nexport const PaginationButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: ${({ disabled, current }) => (disabled && current ? 0 : 1)};\n  background: ${({disabled, current }) => disabled ? color.greenLight : (current ? color.white : color.greenSupperLight)}; /* Более тусклый фон для активной (отключенной) страницы */\n  margin-right:  ${({current }) => current === 'last' ? '0' : '17px'};\n  width: 18px;\n  height: ${({current }) => current ?  '14px' : '18px'};\n  border-radius: 4px;\n  color: ${color.blackModalColr};\n\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    box-shadow: ${({ isClicked }) => (isClicked ? 'none' : '0px 4px 8px rgba(0, 0, 0, 0.7)')};\n  }\n\n  &:disabled {\n    cursor: default;\n    color: ${color.white};\n    scale: 1.25;\n    box-shadow: none;\n  }\n`;\n\n\nexport const PaginationSvg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${color.blackColorSecondary};\n\n  transition: all 0.25s linear;\n  &:focus,\n  &:hover {\n    stroke: ${color.blackModalColr};\n  };\n`","import { PaginationButton, PaginationConteiner, PaginationSvg } from \"./Pagination.styled\";\nimport sprite from '../../img/sprite.svg';\n\nexport const Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const pages = [...Array(totalPages).keys()].map(num => num + 1);\n\n  const goToPreviousPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <PaginationConteiner>\n      <PaginationButton\n        disabled={currentPage === 1}\n        current='true'\n        onClick={goToPreviousPage}\n      >\n        <PaginationSvg>\n          <use href={`${sprite}#icon-chevron-left`} />\n        </PaginationSvg>\n      </PaginationButton>\n\n      {pages.map(page => (\n        <PaginationButton\n          key={page}\n          disabled={page === currentPage}\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </PaginationButton>\n      ))}      \n\n      <PaginationButton\n        disabled={currentPage === totalPages}\n        current='last'\n        onClick={goToNextPage}\n      >\n        <PaginationSvg >\n          <use href={`${sprite}#icon-chevron-right`} />\n        </PaginationSvg>\n      </PaginationButton>\n    </PaginationConteiner>\n  );\n};","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  width: 300px;\n\n  @media (min-width: 375px) {  \n    width: 335px;\n  }\n  @media (min-width: 768px) {  \n    gap: 14px;\n    width: 354px;\n  }\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 215px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; \n    color: ${color.blackColorSecondary};\n  }\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n\n  @media (min-width: 768px) {  \n    min-width: 224px;\n  }\n`;","import { useFormik } from \"formik\";\nimport {  FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n});\n\nexport default function UserNameFilter({dataFactory, plholder, setFilterName, setCurrentPage }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n  \n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setCurrentPage(1)\n      setFilterName( values.userName )\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setCurrentPage(1)\n    setFilterName( '' )\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <CustomButton label=\"Rest\" onClick={() => handleReset()} width=\"116px\"/>\n      )}\n    </FilterConteiner>\n  );\n}","import { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n`","import { AllConteinerBigTable, AllConteinersTable, AvatarImg, NameConteiner, TableHeader } from \"common/GiobalStyles\";\nimport { StatucColor } from \"./CustomersAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\nimport { useEffect, useState } from \"react\";\n\nexport default function CustomersAll({customers, currentPage }) { \n  const data = customers ? customers.map(({ image, name, email, address, phone, register_date, photo }) => [ image, name, email, address, phone, register_date, photo ]) : [];\n\n  const [columnWidths, setColumnWidths] = useState([260, 299, 213, 263, 205 ]);\n  const [columnHeigh, setColumnHeigh] = useState(76);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setColumnHeigh(74);\n        setColumnWidths([94, 161, 120, 148, 119 ]); // Для маленьких экранов\n      } else if (window.innerWidth >= 768 && window.innerWidth < 1440) {\n        setColumnWidths([195, 234, 148, 198, 145 ]); // Для средних экранов\n      } else {\n        setColumnWidths([260, 299, 213, 263, 205 ]); // Для больших экранов\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'date') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n\n    if (columnId === 'date') {\n      const date = new Date(content);\n      content = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      });\n    }\n\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : content}        \n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }\n  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        <NameConteiner>\n          <AvatarImg src={rowData[0]|| rowData[6]} />\n          <p>{rowData[1]}</p>\n        </NameConteiner>\n      </Cell>\n    );\n  };\n  return (   \n    <AllConteinerBigTable width='670px'>\n      <TableHeader>All customers</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n          key={`table-${currentPage}-${data[0]}`}\n          numRows={data.length} \n          defaultRowHeight={columnHeigh} \n          columnWidths={columnWidths} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"User Info\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n          <Column name=\"Email\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'email', data.map(item => item[2]))} />\n          <Column name=\"Address\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'address', data.map(item => item[3]))} />\n          <Column name=\"Phone\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'phone', data.map(item => item[4]))} />\n          <Column name=\"Register date\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'date', data.map(item => item[5]))} />\n        </Table2>\n      </AllConteinersTable>\n    </AllConteinerBigTable>\n  )\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { customersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\nimport { useEffect, useState } from \"react\";\nimport CustomersAll from \"components/CustomersAll/CustomersAll\";\nimport { Pagination } from \"components/Pagination/Pagination\";\n\nexport default function Customers() {  \n  const dispatch = useDispatch();\n  const customers = useSelector(selectCustomersInf);  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterName, setFilterName] = useState('');\n  const limitPerPage = 5;\n\n  useEffect(() => {\n    dispatch(customersInf({ page: currentPage, limit: limitPerPage, name: '' || filterName }));\n  }, [dispatch, currentPage, limitPerPage, filterName]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const totalCustomers = customers.total || 0;\n  const totalPages = Math.ceil(totalCustomers / limitPerPage);\n\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <UserNameFilter dataFactory={customersInf} setFilterName={setFilterName} setCurrentPage={setCurrentPage} />\n\n        <div>\n        <CustomersAll customers={customers.customers} currentPage={currentPage} />\n        <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>        \n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Customers from \"components/Customers/Customers\";\n\nexport default function CustomersPage() {  \n  return (\n    <Customers />\n  );\n}","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;"],"names":["PaginationConteiner","styled","_templateObject","_taggedTemplateLiteral","PaginationButton","_templateObject2","_ref","disabled","current","_ref2","color","_ref3","_ref4","_ref5","isClicked","PaginationSvg","_templateObject3","Pagination","currentPage","totalPages","onPageChange","pages","_toConsumableArray","Array","keys","map","num","_jsxs","children","_jsx","onClick","href","concat","sprite","page","FilterConteiner","FilterForm","InputFilter","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","setFilterName","setCurrentPage","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","type","onChange","handleChange","value","placeholder","CustomButton","label","icon","resetForm","width","StatucColor","getStatusColor","getBackgroundStatusColor","CustomersAll","customers","data","image","email","address","phone","register_date","photo","columnWidths","setColumnWidths","_useState3","_useState4","columnHeigh","setColumnHeigh","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","customCellRenderer","rowIndex","columnId","content","style","borderRight","Date","toLocaleDateString","year","month","day","Cell","AllConteinerBigTable","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","rowData","paddingLeft","NameConteiner","AvatarImg","src","customCellName","item","Customers","useSelector","selectCustomersInf","filterName","customersInf","limit","totalCustomers","total","Math","ceil","ContentContainer","ContentBlock","CustomersPage","selectDataInf","state","pharmacy","dashboarData","selectOrdersInf","ordersData","selectSuppliersInf","suppliersData","selectProductsInf","productsData","customersData"],"sourceRoot":""}