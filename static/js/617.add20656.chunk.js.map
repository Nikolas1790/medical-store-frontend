{"version":3,"file":"static/js/617.add20656.chunk.js","mappings":"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","sources":["components/LoginAndRegister/LoginAndRegister.styled.js","components/LoginAndRegister/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\nimport { Field } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center ;\n`\n\nexport const LoginContainer = styled.div`\n  position: relative;\n  width: 375px;\n  height: 812px;\n  padding: 24px 20px;\n\n  @media (min-width: 768px) {\n    width: 768px;\n    height: 1024px;\n    padding: 24px 32px;\n  }\n  @media (min-width: 1440px) {\n    width: 1440px;\n    height: 800px;\n    padding: 28px  100px;\n  }\n`\nexport const ElementsSvg = styled.svg`\n  position: absolute;\n  right: -180px;\n  bottom: -188px;\n  width: 464px;\n  height: 345px;\n  @media (min-width: 768px) {\n    right: -180px;\n    bottom: -88px;\n  }\n`\nexport const ContextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin-top: 148px;\n\n  @media (min-width: 768px) {\n    gap: 50px;\n    margin-top: 204px;\n  }\n  @media (min-width: 1440px) {\n    gap: 150px;\n    flex-direction: row;\n    margin-top: 226px;\n  }\n`\n///////////////////////////////////////////////////\nexport const TitleContainer = styled.div`\n  position: relative;\n  /* width: 335px; */\n  @media (min-width: 768px) {\n    width: 614px;\n  }\n`\nexport const WhitePill = styled.img`\n  position: absolute;\n  top: -58px;\n  right: 20px;\n  width: 95px;\n  height: 93px;\n  @media (min-width: 768px) {\n    top: -104px;\n    width: 179px;\n    height: 175px;\n  }\n`\nexport const Title = styled.h2`\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.2;\n  @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  }\n`\nexport const TitleSpan = styled.span`\n  color:${color.greenLight};\n`\n\nexport const FormContainer = styled.div`\n  /* width: 335px; */\n  @media (min-width: 768px) {\n    width: 323px;\n  }\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 100%;\n  height:44px;\n\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 44px;\n  border: 1px solid\t${color.blackPrimarySecondary};\n  border-radius: 60px;\n  padding: 13px 18px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 13px;\n  right: 18px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;","import Logo from \"components/Logo/Logo\";\nimport * as Yup from 'yup';\nimport { Container, ContextContainer, ElementsSvg, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, LoginContainer, Title, TitleContainer, TitleSpan, WhitePill } from \"./LoginAndRegister.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { logIn } from \"../../redux/auth/operationsAuth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport whiteRoundPill from '../../img/whiteRoundPill/white-round-pill.png';\nimport whiteRoundPill2x from '../../img/whiteRoundPill/white-round-pill@2x.png';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Login() {  \n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n\n  const handleSubmit = async (values) => {\n    try {\n      await dispatch(logIn(values)).unwrap();\n      navigate('/dashboard');\n    } catch (error) {\n      toast.error(\"Please check the Mail and Password.\");\n    }    \n  }\n\n  return (\n    <Container>\n      <LoginContainer>\n        <ElementsSvg >\n          <use href={`${sprite}#icon-elements`} />\n        </ElementsSvg>\n        <Logo />\n        <ContextContainer>\n          <TitleContainer>\n          <picture>\n            <source srcSet={`${whiteRoundPill2x} 2x`}  media=\"(min-resolution: 192dpi)\"  />\n            <WhitePill src={whiteRoundPill} alt=\"logo\" />\n          </picture> \n            <Title>Your medication, delivered Say goodbye to all <TitleSpan>your healthcare</TitleSpan> worries with us</Title>\n          </TitleContainer>\n\n          <FormContainer>\n            <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields>  \n                    <FormConteiner>           \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"email\"\n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email address\" \n                          error={errors.email && touched.email ? \"true\" : \"false\" } \n                          style={{\n                            borderColor: touched.email && errors.email ? \"red\" : \n                                         touched.email && !errors.email ? \"green\" : \"defaultColor\",\n                          }}\n                        />\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField\n                         id=\"password\" \n                         name=\"password\" \n                         type={showPassword ? \"text\" : \"password\"} \n                         placeholder=\"Passwor\" error={errors.password && touched.password ? \"true\" : \"false\"} \n                        \n                         style={{\n                          borderColor: touched.password && errors.password ? \"red\" : \n                                       touched.password && !errors.password ? \"green\" : \"defaultColor\",\n                        }}\n                       />\n\n                        {showPassword ? (\n                          <EyeSvg width={18} height={18} onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg width={18} height={18} onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n                    </FormConteiner>     \n                    <CustomButton label=\"Log in\" />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>\n          </FormContainer>\n        </ContextContainer>\n      </LoginContainer>\n    </Container>\n  );\n}","import Login from \"components/LoginAndRegister/Login\";\n\nexport default function LoginPage() {\n  return (\n    <Login />\n  );\n}  "],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","LoginContainer","_templateObject2","ElementsSvg","_templateObject3","ContextContainer","_templateObject4","TitleContainer","_templateObject5","WhitePill","_templateObject6","Title","_templateObject7","TitleSpan","_templateObject8","color","FormContainer","_templateObject9","FormFields","_templateObject10","FormConteiner","_templateObject11","FormFieldConteiner","_templateObject12","FormField","Field","_templateObject13","EyeSvg","_templateObject14","initialValues","email","password","schema","Yup","matches","required","min","Login","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","logIn","unwrap","t0","toast","stop","_x","apply","arguments","_jsx","children","_jsxs","href","concat","sprite","Logo","srcSet","whiteRoundPill2x","media","src","whiteRoundPill","alt","Formik","validationSchema","onSubmit","_ref2","errors","touched","Form","id","name","type","placeholder","error","style","borderColor","width","height","onMouseDown","e","preventDefault","CustomButton","label","LoginPage"],"sourceRoot":""}