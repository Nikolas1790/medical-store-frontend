{"version":3,"file":"static/js/801.1984fd0b.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/RegisterAndLogin/RegisterAndLogin.styled.js","components/RegisterAndLogin/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: 100%;\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\nimport { Field } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center ;\n  flex-direction: column;\n`\n\nexport const LoginContainer = styled.div`\n  position: relative;\n  width: 1440px;\n  padding: 28px 253px 262px 100px;\n  /* background: yellow; */\n  overflow: hidden;\n`\nexport const ElementsSvg = styled.svg`\n  position: absolute;\n  right: -180px;\n  bottom: -88px;\n`\nexport const ContextContainer = styled.div`\n  display: flex;\n  gap: 150px;\n  margin-top: 262px;\n`\n///////////////////////////////////////////////////\nexport const TitleContainer = styled.div`\n  position: relative;\n`\nexport const WhitePill = styled.img`\n  position: absolute;\n  top: -104px;\n  right: 20px;\n`\nexport const Title = styled.h2`\n  font-size: 54px;\n  font-weight: 600;\n  width: 614px;\n`\nexport const TitleSpan = styled.span`\n  color:${color.greenLight};\n`\n/////////////////////////////////////////////////////////////////////////////\nexport const FormContainer = styled.div`\n  width: 323px;\n`\n/////////////////////////////////////////////////////////////////////////////\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 100%;\n  height:44px;\n  \n\n  /* @media (min-width: 768px) {\n    max-width: 472px;\n  } */\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  max-width: 335px;\n\n  height: 44px;\n\n  border: 1px solid\t${color.blackPrimarySecondary};\n  /* border: 1px solid\t${(props) => (props.error === \"true\" ? color.red : color.blackPrimarySecondary)}; */\n\n  border-radius: 60px;\n  padding: 13px 18px;\n  outline: none;\n  /* color: ${color.whitePrimary}; */\n  background: ${color.white};\n  \n  @media (min-width: 768px) {\n    /* max-width: 472px; */\n    /* height: 50px; */\n    /* padding: 13px 18px; */\n  }\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 13px;\n  right: 13px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n\n  @media (min-width: 768px) {\n    top: 13px;\n    right: 18px;\n  }\n`;\n\n// export const SecureMessage = styled.p`\n//   font-size: 10px;\n//   color: ${color.green};\n//   padding: 4px 0px 0px 14px;\n// `;\n\n","import Logo from \"components/Logo/Logo\";\nimport * as Yup from 'yup';\nimport { Container, ContextContainer, ElementsSvg, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, LoginContainer, Title, TitleContainer, TitleSpan, WhitePill } from \"./RegisterAndLogin.styled\";\nimport whitePill from \"../../img/whiteRoundPill/white-round-pill.png\"\nimport sprite from '../../img/sprite.svg';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { logIn } from \"../../redux/auth/operationsAuth\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport { CustomBtn } from \"components/CustomButton/CustomButton.styled\";\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Login() {  \n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n\n  const handleSubmit = async (values) => {\n    try {\n      await dispatch(logIn(values)).unwrap();\n      navigate('/dashboard');\n    } catch (error) {\n      toast.error(\"Please check the Mail and Password.\");\n    }\n    \n  }\n\n  return (\n    <Container>\n\n      <LoginContainer>\n        <ElementsSvg width={464} height={345}>\n          <use href={`${sprite}#icon-elements`} />\n        </ElementsSvg>\n        <Logo />\n        <ContextContainer>\n          <TitleContainer>\n            <WhitePill src={whitePill} alt=\"tablet\" />\n            <Title>Your medication, delivered Say goodbye to all <TitleSpan>your healthcare</TitleSpan> worries with us</Title>\n          </TitleContainer>\n\n          <FormContainer>\n            \n\n            <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n            {({ errors, touched }) => (\n              <Form>\n                <FormFields>  \n                  <FormConteiner>           \n                    <FormFieldConteiner>\n                      <FormField \n                        id=\"email\"\n                        name=\"email\" \n                        type=\"email\" \n                        placeholder=\"Email address\" \n                        error={errors.email && touched.email ? \"true\" : \"false\" } \n                        style={{\n                          borderColor: touched.email && errors.email ? \"red\" : \n                                       touched.email && !errors.email ? \"green\" : \"defaultColor\",\n                        }}\n                      />\n                    </FormFieldConteiner>\n                      \n                    <FormFieldConteiner>\n                      <FormField\n                       id=\"password\" \n                       name=\"password\" \n                       type={showPassword ? \"text\" : \"password\"} \n                       placeholder=\"Passwor\" error={errors.password && touched.password ? \"true\" : \"false\"} \n                       \n                       style={{\n                        borderColor: touched.password && errors.password ? \"red\" : \n                                     touched.password && !errors.password ? \"green\" : \"defaultColor\",\n                      }}\n                     />\n\n                      {showPassword ? (\n                        <EyeSvg width={18} height={18} onMouseDown={(e) => {\n                          e.preventDefault(); \n                          togglePasswordVisibility();\n                        }}>\n                          <use href={`${sprite}#icon-eye`} />\n                        </EyeSvg>\n                      ) : (\n                        <EyeSvg width={18} height={18} onMouseDown={(e) => {\n                          e.preventDefault(); \n                          togglePasswordVisibility();\n                        }}>\n                          <use href={`${sprite}#icon-eye-off`} />\n                        </EyeSvg>\n                      )}\n                    </FormFieldConteiner>\n                  </FormConteiner>     \n                  <CustomBtn>Log in</CustomBtn>\n                </FormFields>                    \n              </Form>\n            )}\n          </Formik>\n\n\n\n\n\n\n          </FormContainer>\n        </ContextContainer>\n      </LoginContainer>\n    </Container>\n  );\n}","import Login from \"components/RegisterAndLogin/Login\";\n\nexport default function LoginPage() {\n  return (\n    <Login />\n  );\n}  "],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","color","props","prop","Container","LoginContainer","_templateObject2","ElementsSvg","_templateObject3","ContextContainer","_templateObject4","TitleContainer","_templateObject5","WhitePill","_templateObject6","Title","_templateObject7","TitleSpan","_templateObject8","FormContainer","_templateObject9","FormFields","_templateObject10","FormConteiner","_templateObject11","FormFieldConteiner","_templateObject12","FormField","Field","_templateObject13","error","EyeSvg","_templateObject14","initialValues","email","password","schema","Yup","matches","required","min","Login","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","logIn","unwrap","t0","toast","stop","_x","apply","arguments","_jsx","children","_jsxs","width","height","href","concat","sprite","Logo","src","whitePill","alt","Formik","validationSchema","onSubmit","_ref2","errors","touched","Form","id","name","type","placeholder","style","borderColor","onMouseDown","e","preventDefault","LoginPage"],"sourceRoot":""}