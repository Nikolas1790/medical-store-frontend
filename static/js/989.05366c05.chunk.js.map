{"version":3,"file":"static/js/989.05366c05.chunk.js","mappings":"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","sources":["components/CustomButton/CustomButton.styled.js","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/UserNameFilter/UserNameFilter.styled.js","components/CustomButton/CustomButton.jsx","components/UserNameFilter/UserNameFilter.jsx","components/Utils/utils.jsx","components/ProductsAll/ProductsAll.styled.js","components/ActionBlock/ActionBlock.styled.js","components/ActionBlock/ActionBlock.jsx","components/ProductsAll/ProductsAll.jsx","components/Products/Products.styled.js","components/Products/Products.jsx","pages/ProductsPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const CustomBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n\n  height: 44px;\n  width: 100%;\n  border-radius: 60px;\n  color: ${color.white};\n  background: ${color.greenLight};\n  transition: background 0.3s linear;\n\n  &:hover,\n  &:focus {\n    /* color: ${color.blackLight}; */\n    background: ${color.greenDarker};  \n  }\n  \n  @media (min-width: 768px) {\n    /* font-size: 16px; */\n    /* padding: ${(props) => props.prop === 'true' ? '14px 28px' : '12px 28px'}; */\n  }\n`","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const PaginationConteiner = styled.div`\n  display: flex;\n  justify-content: center; \n  align-items: center; \n`\n\nexport const PaginationButton = styled.button`\n  background: ${(props) => props.disabled ? color.greenLight : color.greenSupperLight}; /* Более тусклый фон для активной (отключенной) страницы */\n  margin-right: 17px;\n  width: 9px;\n  height: 9px;\n  border-radius: 50%;\n  \n  &:hover {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.7); \n  }\n\n  &:disabled {\n    cursor: default;\n    background: ${color.greenLight};\n    scale: 1.25;\n  }\n`;\n","import { PaginationButton, PaginationConteiner } from \"./Pagination.styled\";\n\nexport const Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const pages = [...Array(totalPages).keys()].map(num => num + 1);\n  return (\n    <PaginationConteiner>\n      {pages.map(page => (\n        <PaginationButton\n          key={page}\n          disabled={page === currentPage}\n          onClick={() => onPageChange(page)}\n        >\n          {/* {page} */}\n        </PaginationButton>\n      ))}      \n    </PaginationConteiner>\n  );\n};\n","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const FilterConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n  /* align-items: center;\n\n  width: 354px;\n  height: 44px;\n  background: red; */\n`\nexport const FilterForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 354px;\n`;\n\nexport const InputFilter = styled.input`\n  display: flex;\n  align-items: center;\n\n  min-width: 224px;\n  height: 44px;\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 60px;\n  box-shadow: 0px -1px 5px 0px rgba(71, 71, 71, 0.05);\n  background: ${color.white};\n  padding: 13px 18px;\n\n  &::placeholder {\n    font-size: 12px; // Пример изменения размера текста плейсхолдера\n    color: ${color.textColorSecondary};\n  }\n`;\n\nexport const Button = styled.div`\n  width: 116px;\n`;","import { FilterIcon } from \"components/Utils/utils\";\nimport { CustomBtn } from \"./CustomButton.styled\";\n\nexport default function CustomButton({ className, label, onClick, icon }){\n  return (\n    <CustomBtn className={className} onClick={onClick} type=\"submit\" >\n      {icon && <FilterIcon />} \n      {label}\n    </CustomBtn>\n  );\n};","import { useFormik } from \"formik\";\nimport { Button, FilterConteiner, FilterForm, InputFilter } from \"./UserNameFilter.styled\";\n// import { customersInf, ordersInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useState } from \"react\";\n// import { selectCustomersInf } from \"../../redux/ePharmacy/selector\";\n\nconst validationSchema = Yup.object({\n  userName: Yup.string()\n    .required('Required')\n    // Дополнительные правила валидации можно добавить здесь\n});\n\nexport default function UserNameFilter({dataFactory, plholder, setFilterName, setCurrentPage }) {  \n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n//   const customers = useSelector(selectCustomersInf);  \n// console.log(customers)\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n    },    \n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setCurrentPage(1)\n      setFilterName( values.userName )\n      setIsRestButtonVisible(\"true\")\n      dispatch(dataFactory({ name: values.userName }));\n    },\n  });\n\n  const handleReset = () => {\n    setCurrentPage(1)\n    setFilterName( '' )\n    setIsRestButtonVisible(false);\n    dispatch(dataFactory({}))\n    formik.resetForm();\n  };\n\n  return (\n    <FilterConteiner>\n      <FilterForm onSubmit={formik.handleSubmit}>\n        <InputFilter\n          id=\"userName\"\n          name=\"userName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.userName}\n          placeholder={plholder || \"User Name\"}\n        />\n        <CustomButton label=\"Filter\" type=\"submit\" icon={true} />\n      </FilterForm>\n      {isRestButtonVisible && (\n        <Button><CustomButton label=\"Rest\" onClick={() => handleReset()}/></Button>\n      )}\n    </FilterConteiner>\n  );\n}","import color from 'common/GlobalColers';\nimport sprite from '../../img/sprite.svg';\n\nexport const FilterIcon = () => (\n  <svg width=\"14\" height=\"14\">\n      <use href={`${sprite}#icon-filter`} />\n  </svg>\n);\n\nexport const getColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.red;\n    case 'Expense':\n      return color.greenLight;\n    case 'Error':\n      return color.blackPrimary;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundColor = (type) => {\n  switch (type) {\n    case 'Income':\n      return color.redSecondary;\n    case 'Expense':\n      return color.greenSecondary;\n    case 'Error':\n      return color.blackPrimarySecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\nexport const getStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenLight;\n    case 'Confirmed':\n      return color.violet;\n    case 'Pending':\n      return color.orange;\n    case 'Cancelled':\n      return color.red;\n    case 'Processing':\n      return color.blue;\n    case 'Shipped':\n      return color.orange;\n    case 'Delivered':\n      return color.greenDarker;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundStatusColor = (type) => {\n  switch (type) {\n    case 'Completed':\n      return color.greenSecondary;\n    case 'Confirmed':\n      return color.violetSecondary;\n    case 'Pending':\n      return color.orangeSecondary;\n    case 'Cancelled':\n      return color.redSecondary;\n    case 'Processing':\n      return color.blueSecondary;\n    case 'Shipped':\n      return color.orangeSecondary;\n    case 'Delivered':\n      return color.greenSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n\nexport const getActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenLight;\n    case 'Deactive':\n      return color.red;\n    default:\n      return color.blackPrimary;\n  }\n};\n\nexport const getBackgroundActiveColor = (type) => {\n  switch (type) {\n    case 'Active':\n      return color.greenSecondary;\n    case 'Deactive':\n      return color.redSecondary;\n    default:\n      return color.blackPrimarySecondary;\n  }\n};\n\n","import { getBackgroundStatusColor, getStatusColor } from 'components/Utils/utils'\nimport styled from 'styled-components'\n\n\nexport const StatucColor = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 92px;\n  height: 25px;\n  color: ${({ type }) => getStatusColor(type)};\n  background: ${({ type }) => getBackgroundStatusColor(type)};\n\n  font-size: 14px;\n  border-radius: 40px;\n\n`\n\n// export const ActionConteiner = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: 8px;\n\n// `","import styled from 'styled-components'\n\nexport const ActionConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n`","import { useDispatch } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { ActionConteiner } from './ActionBlock.styled';\nimport { deleteProduct } from '../../redux/ePharmacy/operations';\n\nexport default function ActionBlock({ id }) { \n  const dispatch = useDispatch();\n\n \n  \n  const dellItem = () => {\n    dispatch(deleteProduct(id))\n  };\n  \n\n  return (        \n    <ActionConteiner>\n      <button >\n        <svg width={32} height={32}>\n          <use href={`${sprite}#icon-btn-edit`} />\n        </svg>\n      </button>\n\n      <button onClick={dellItem}>\n        <svg width={32} height={32}>\n          <use href={`${sprite}#icon-btn-dell`} />\n        </svg>\n      </button>\n    </ActionConteiner> \n  )\n}","import { AllConteinerBigTable, AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport {  StatucColor } from \"./ProductsAll.styled\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport color from \"common/GlobalColers\";\nimport ActionBlock from \"components/ActionBlock/ActionBlock\";\n\nexport default function ProductsAll({ products }) { \n  const data = products ? products.map(({ name, category, stock, suppliers, price, _id }) => [ name, category, stock, suppliers, price, _id ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let content = data[rowIndex];\n    let style = {};\n\n    if ( columnId !== 'actions') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n\n    return (\n      <Cell style={style}>\n        {columnId === 'status' ? <StatucColor type={content}>{content}</StatucColor> : (\n          columnId === 'actions' ? <ActionBlock id={content[5]}/> : content)}  \n      </Cell>\n    );\n  };\n\n  return (   \n    <AllConteinerBigTable>\n      <TableHeader>All products</TableHeader>\n      \n      <AllConteinersTable >\n        <Table2  \n         key={`table-${data}`}\n          numRows={data.length} \n          defaultRowHeight={76} \n          columnWidths={[276, 230, 199, 226, 163, 146 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Product Info\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'name', data.map(item => item[0]))} />\n          <Column name=\"Category\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'category', data.map(item => item[1]))} />\n          <Column name=\"Stock\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'stocks', data.map(item => item[2]))} />\n          <Column name=\"Suppliers\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'suppliers', data.map(item => item[3]))} />\n          <Column name=\"Price\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'price', data.map(item => item[4]))} />\n          <Column name=\"Action\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'actions', data)} />\n        </Table2>\n      </AllConteinersTable>\n    </AllConteinerBigTable>\n  )\n}","// import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const AddProductConteiner = styled.button`\n  display: flex;\n  justify-content: center; \n  align-items: center; \n  gap: 8px;\n`\nexport const AddProduct = styled.p`\n  font-size: 14px;\n`","import { ContentBlock, ContentContainer, FilterAddConteiner } from \"common/GiobalStyles\";\nimport UserNameFilter from \"components/UserNameFilter/UserNameFilter\";\nimport { productInf } from \"../../redux/ePharmacy/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectProductsInf } from \"../../redux/ePharmacy/selector\";\nimport { useEffect, useState } from \"react\";\nimport ProductsAll from \"components/ProductsAll/ProductsAll\";\nimport { Pagination } from \"components/Pagination/Pagination\";\nimport { AddProduct, AddProductConteiner } from \"./Products.styled\";\n\nexport default function Products() {  \n  const dispatch = useDispatch();\n  const products = useSelector(selectProductsInf);  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterName, setFilterName] = useState('');\n  const limitPerPage = 5;\n// console.log(products)\n  useEffect(() => {\n    dispatch(productInf({ page: currentPage, limit: limitPerPage, name: '' || filterName }));\n  }, [dispatch, currentPage, limitPerPage, filterName, products.total]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n  \n  const totalProducts = products.total || 0;\n  const totalPages = Math.ceil(totalProducts / limitPerPage);\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <FilterAddConteiner>\n          <UserNameFilter dataFactory={productInf} plholder=\"Product Name\" setFilterName={setFilterName} setCurrentPage={setCurrentPage}/>\n          <AddProductConteiner>\n\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <rect width=\"42\" height=\"42\" rx=\"21\" fill=\"#59B17A\"/>\n              <path d=\"M27 21H15M21 15V27V15Z\" stroke=\"white\" />\n            </svg>\n\n            <AddProduct>Add a new product</AddProduct>\n          </AddProductConteiner>\n        </FilterAddConteiner>\n\n        <div>\n          <ProductsAll products={products.products} />\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </ContentBlock>\n    </ContentContainer>\n  );\n}\n\n\n","import Products from \"components/Products/Products\";\n\nexport default function ProductsPage() {\n  return (\n    <Products />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n// export const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n// export const selectProductsInf = (state) => state.pharmacy.productsData;\n// export const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;\n"],"names":["CustomBtn","styled","_templateObject","_taggedTemplateLiteral","color","props","prop","PaginationConteiner","PaginationButton","_templateObject2","disabled","Pagination","_ref","currentPage","totalPages","onPageChange","pages","_toConsumableArray","Array","keys","map","num","_jsx","children","page","onClick","FilterConteiner","FilterForm","InputFilter","_templateObject3","Button","_templateObject4","CustomButton","className","label","icon","_jsxs","type","FilterIcon","validationSchema","Yup","userName","required","UserNameFilter","dataFactory","plholder","setFilterName","setCurrentPage","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","name","handleSubmit","id","onChange","handleChange","value","placeholder","resetForm","width","height","href","concat","sprite","getColor","getBackgroundColor","getStatusColor","getBackgroundStatusColor","getActiveColor","getBackgroundActiveColor","StatucColor","_ref2","ActionConteiner","ActionBlock","deleteProduct","ProductsAll","products","data","category","stock","suppliers","price","_id","customCellRenderer","rowIndex","columnId","content","style","borderRight","paddingLeft","Cell","AllConteinerBigTable","TableHeader","AllConteinersTable","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","item","AddProductConteiner","AddProduct","Products","useSelector","selectProductsInf","_useState3","_useState4","filterName","useEffect","productInf","limit","total","totalProducts","Math","ceil","ContentContainer","ContentBlock","FilterAddConteiner","viewBox","fill","xmlns","rx","d","stroke","ProductsPage","selectDataInf","state","pharmacy","dashboarData","selectOrdersInf","ordersData","selectSuppliersInf","suppliersData","productsData","selectCustomersInf","customersData"],"sourceRoot":""}