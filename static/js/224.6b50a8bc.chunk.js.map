{"version":3,"file":"static/js/224.6b50a8bc.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.jsx","components/DashboardRecentCustomers/DashboardRecentCustomers.jsx","components/DashboardStatistic/DashboardStatistic.styled.js","components/DashboardStatistic/DashboardStatistic.jsx","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx","redux/ePharmacy/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const  TableConteiner = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`\n\nexport const  TableBlockItem = styled.div`\n/* width: 100%; */\n  width: 300px;\n  height: ${({height }) => height || '460px'};\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n  background: rgb(255, 255, 255);\n  overflow: hidden;\n  \n  @media (min-width: 375px) {  \n     min-width: 335px;\n  }\n  @media (min-width: 768px) {  \n    width: 704px;\n    height: 512px;\n  }\n\n  @media (min-width: 1440px) {  \n    width: 630px;\n  }\n`","import color from 'common/GlobalColers'\nimport { getBackgroundColor, getColor } from 'components/Utils/utils';\nimport styled from 'styled-components'\n\nexport const IncomeExpensesTableConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;  \n    \n    &:hover,\n    &:focus {\n      outline: none; \n    } \n  }\n\n  .bp5-table-header {\n    display: flex;\n    align-items: center;\n    height: 46px;\n    background-color: ${color.white}; \n\n    font-weight: 500;\n    color: ${color.blackColorSecondary};\n    box-shadow: none; \n\n    @media (min-width: 768px) {  \n      height: 58px;\n    }\n  }\n  .bp5-table-column-name{\n    margin-left: -10px;\n  }\n\n  .bp5-table-header::after {\n    content: ''; \n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; \n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n\n  .bp5-table-cell {  \n    position: relative; \n    display: flex;\n    align-items: center;\n    font-size: 14px;\n    background: ${color.white};\n    box-shadow: none; \n    padding: 0;\n\n    @media (min-width: 768px) {  \n      font-size: 16px;\n    }\n  }\n  \n  .bp5-table-cell::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; \n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n`\n\nexport const CellType = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content:center;\n  color: ${({ type }) => getColor(type)};\n  background: ${({ type }) => getBackgroundColor(type)};\n  width: 80px;\n  height: 23px;\n  font-size: 12px;\n  border-radius: 40px;\n\n  @media (min-width: 768px) {  \n    height: 25px;\n    font-size: 14px;\n  }\n`\n\nexport const CellDescription = styled.p`\n    white-space: normal;\n    padding: 14px 0;\n`;\n\nexport const CellSum = styled.p`\n  position: relative;\n  color: ${({ type }) => getColor(type)};\n\n  &::after {\n    content: ${({ type }) => (type === 'Error' ? '\" \"' : 'none')};\n    position: absolute;\n    top: 58%;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: ${color.blackPrimary};\n    transform: translateY(-50%);\n  }\n`;","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect, useState } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { CellDescription, CellSum, CellType, IncomeExpensesTableConteiner } from \"./DashboardIncomeExpenses.styled\";\n\nexport default function DashboardIncomeExpenses() {  \n  const dispatch = useDispatch();\n  const { incomeExpenses } = useSelector(selectDataInf);  \n  const [columnWidths, setColumnWidths] = useState([120, 393, 77 ]);\n  const [columnHeigh, setColumnHeigh] = useState(65);\n\n  const data = incomeExpenses ? incomeExpenses.map(({ name, amount, type }) => [type, name, amount]) : [];\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setColumnHeigh(82);\n        setColumnWidths([108, 118, 81]); \n      } else if (window.innerWidth > 768 && window.innerWidth < 1440) {\n        setColumnHeigh(65);\n        setColumnWidths([120, 467, 77]); \n      } else {\n        setColumnWidths([120, 393, 77 ]); \n      }\n    };\n\n    handleResize();  \n    window.addEventListener('resize', handleResize);  \n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]); \n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    const cellType = data[rowIndex][0];\n    const cellValue = data[rowIndex]\n    let style = {};\n    if (columnId === 'sum') {\n      style.justifyContent = 'flex-end';\n    }  \n\n    return (\n      <Cell style={style}>\n        {columnId === 'sum' ? ( <CellSum type={cellType}>{cellValue[2]}</CellSum> ) : (\n          columnId === 'type'? <CellType type={cellType}>{cellValue[0]}</CellType> : <CellDescription>{cellValue[1]}</CellDescription> \n        )}\n      </Cell>\n    );\n  };  \n\n  return (\n    <TableBlockItem height=\"582px\">\n      <TableHeader>Income/Expenses</TableHeader>\n      <IncomeExpensesTableConteiner>\n        <Table2 \n          numRows={data.length} \n          defaultRowHeight={columnHeigh} \n          columnWidths={columnWidths} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Today\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'type', data)} />\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'details', data)}/>\n          <Column name=\"\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'sum', data)} />\n        </Table2>\n      </IncomeExpensesTableConteiner>\n    </TableBlockItem>\n  )\n}","import { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect, useState } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { AllConteinersTable, TableHeader } from \"common/GiobalStyles\";\nimport color from \"common/GlobalColers\";\nimport { AvatarImg, NameConteiner } from 'common/GiobalStyles';\n\nexport default function DashboardRecentCustomers() {  \n  const dispatch = useDispatch();\n  const { recentCustomers } = useSelector(selectDataInf);  \n  const [columnWidths, setColumnWidths] = useState([203, 269, 118]);\n  const [columnHeigh, setColumnHeigh] = useState(78);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setColumnHeigh(74);\n        setColumnWidths([92, 151, 64]); \n      } else if (window.innerWidth >= 768 && window.innerWidth < 1440) {\n        setColumnWidths([235, 279, 150]);\n      } else {\n        setColumnWidths([203, 269, 118]);\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  const data = recentCustomers ? recentCustomers.map(({ name, email, spent, image }) => [ name, email, spent, image ]) : [];\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    let style = {};\n    if ( columnId === 'email') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n    return (\n      <Cell style={style}>\n        {data[rowIndex]}        \n      </Cell>\n    );\n  };\n\n\n  const customCellName = (rowIndex, columnId, data) => {\n    let style = {};\n    const rowData = data[rowIndex];\n    if (columnId === 'name') {\n      style.borderRight = `1px solid ${color.blackPrimarySecondary}`;\n    }  \n    if (columnId === 'name') {\n      style.paddingLeft = '0px';\n    }\n    return (\n      <Cell style={style}>\n        <NameConteiner>\n          <AvatarImg src={rowData[3]} alt={rowData[0]} />\n          <p>{rowData[0]}</p>\n        </NameConteiner>\n      </Cell>\n    );\n  };\n  \n  return (    \n    <TableBlockItem>      \n      <TableHeader>Recent Customers</TableHeader>\n     \n      <AllConteinersTable >\n        <Table2  \n          numRows={data.length} \n          defaultRowHeight={columnHeigh} \n          columnWidths={columnWidths} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Name\" cellRenderer={(rowIndex) => customCellName(rowIndex, 'name', data)} />\n          <Column name=\"Email\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'email', data.map(item => item[1]))} />\n          <Column name=\"Spent\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'spent', data.map(item => item[2]))} />\n        </Table2>\n      </AllConteinersTable>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StatisticConteiner = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`\nexport const StatisticItem  = styled.li`\n  width: 157px;\n  height: 98px;\n  border-radius: 8px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  padding: 14px;\n\n  fill: transparent;\n  stroke: ${color.blackPrimary};\n  &:first-child {\n    border-color: ${color.greenLight};\n  }\n\n  @media (min-width: 768px) {  \n    width: 221px;\n  height: 108px;\n  padding: 14px 18px;\n  }\n\n  @media (min-width: 1440px) {  \n    width: 240px;\n  }\n`\nexport const StatisticTitleConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 28px;  \n  \n`\nexport const StatisticSvg  = styled.svg`\n  width: 18px;\n  height: 18px;\n\n  @media (min-width: 768px) {  \n    width: 20px;\n    height: 20px;\n  }\n`\n\nexport const StatisticSectionTitle = styled.h4`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.blackColorSecondary};  \n`\nexport const StatisticValue = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.33;  \n\n  @media (min-width: 768px) {  \n    font-size: 24px;\n  }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { StatisticConteiner, StatisticItem, StatisticSectionTitle, StatisticSvg, StatisticTitleConteiner, StatisticValue } from './DashboardStatistic.styled';\nimport { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\n\nexport default function DashboardStatistic() {  \n  const dispatch = useDispatch();\n  const data = useSelector(selectDataInf);\n  \n  const statistic = [\n    { name: \"products\", icon: \"#icon-streamline\", value: `${data.productsCount}` },\n    { name: \"suppliers\", icon: \"#icon-users\", value: `${data.suppliersCount}` },\n    { name: \"customers\", icon: \"#icon-users\", value: `${data.customersCount}` },\n  ];\n\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  return (\n    <StatisticConteiner>\n      {statistic.map(link => (        \n        <StatisticItem key={link.name} >\n          <StatisticTitleConteiner>\n            <StatisticSvg >\n              <use href={`${sprite}${link.icon}`} />\n            </StatisticSvg>\n            <StatisticSectionTitle>All {link.name}</StatisticSectionTitle>\n          </StatisticTitleConteiner>\n          <StatisticValue>{data.customersCount ? link.value : 0}</StatisticValue>\n        </StatisticItem>\n      ))}\n    </StatisticConteiner>\n  );\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport DashboardIncomeExpenses from \"components/DashboardIncomeExpenses/DashboardIncomeExpenses\";\nimport DashboardRecentCustomers from \"components/DashboardRecentCustomers/DashboardRecentCustomers\";\nimport DashboardStatistic from \"components/DashboardStatistic/DashboardStatistic\";\nimport { TableConteiner } from \"./Dashboard.styled\";\n\nexport default function Dashboard() { \n  return (\n    <ContentContainer>\n      <ContentBlock top=\"20px\" bottom=\"40px\" >\n        <DashboardStatistic />\n\n        <TableConteiner>\n          <DashboardRecentCustomers />\n          <DashboardIncomeExpenses />\n        </TableConteiner>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Dashboard from \"components/Dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return (\n    <Dashboard />\n  );\n}  ","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\nexport const selectOrdersInf = (state) => state.pharmacy.ordersData;\n\nexport const selectSuppliersInf = (state) => state.pharmacy.suppliersData;\n\nexport const selectProductsInf = (state) => state.pharmacy.productsData;\n\nexport const selectCustomersInf = (state) => state.pharmacy.customersData;"],"names":["TableConteiner","styled","_templateObject","_taggedTemplateLiteral","TableBlockItem","_templateObject2","_ref","height","color","IncomeExpensesTableConteiner","CellType","type","getColor","_ref2","getBackgroundColor","CellDescription","_templateObject3","CellSum","_templateObject4","_ref3","_ref4","DashboardIncomeExpenses","dispatch","useDispatch","incomeExpenses","useSelector","selectDataInf","_useState","useState","_useState2","_slicedToArray","columnWidths","setColumnWidths","_useState3","_useState4","columnHeigh","setColumnHeigh","data","map","name","amount","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","dashboardInf","customCellRenderer","rowIndex","columnId","cellType","cellValue","style","justifyContent","_jsx","Cell","children","_jsxs","TableHeader","Table2","numRows","length","defaultRowHeight","enableColumnResizing","enableRowResizing","enableRowHeader","Column","cellRenderer","DashboardRecentCustomers","recentCustomers","email","spent","image","borderRight","concat","AllConteinersTable","rowData","paddingLeft","NameConteiner","AvatarImg","src","alt","customCellName","item","StatisticConteiner","StatisticItem","StatisticTitleConteiner","StatisticSvg","StatisticSectionTitle","_templateObject5","StatisticValue","_templateObject6","DashboardStatistic","statistic","icon","value","productsCount","suppliersCount","customersCount","link","href","sprite","Dashboard","ContentContainer","ContentBlock","top","bottom","DashboardPage","state","pharmacy","dashboarData","selectOrdersInf","ordersData","selectSuppliersInf","suppliersData","selectProductsInf","productsData","selectCustomersInf","customersData"],"sourceRoot":""}