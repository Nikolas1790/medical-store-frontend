{"version":3,"file":"static/js/80.9cd96f21.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.jsx","components/DashboardRecentCustomers/DashboardRecentCustomers.styled.js","components/DashboardRecentCustomers/DashboardRecentCustomers.jsx","components/DashboardStatistic/DashboardStatistic.styled.js","redux/ePharmacy/selector.js","components/DashboardStatistic/DashboardStatistic.jsx","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const  TableConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const  TableBlockItem = styled.div`\n\n  min-width: 630px;\n  height: 512px;\n  /* border: 1px solid red; */\n\n  border: 1px solid ${color.blackPrimarySecondary};\n  border-radius: 8px;\n  background: rgb(255, 255, 255);\n  overflow: hidden;\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const IncomeExpensesTableConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n  .bp5-table-header {\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n    /* padding-left: 0px; */\n/* margin-left: -10px; */\n/* line-height:1; */\n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; \n  }\n  .bp5-table-column-name{\n    margin-left: -10px;\n  }\n\n  .bp5-table-header::after {\n    content: ''; /* Необходимо для отображения псевдоэлемента */\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n\n  .bp5-table-cell {  \n    position: relative; \n    display: flex;\n    align-items: center;\n    background: ${color.white};\n    padding-left: 20px;\n    box-shadow: none; \n    padding: 0;\n  }\n  .bp5-table-cell::after {\n    content: ''; /* Необходимо для отображения псевдоэлемента */\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0; /* Размещает линию в нижней части ячейки */\n    border-bottom: 1px solid ${color.blackPrimarySecondary}; \n  }\n\n`","// import { selectDataInf } from '../../redux/ePharmacy/selector';\n// import { useEffect } from 'react';\n// import { dashboardInf } from '../../redux/ePharmacy/operations';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { IncomeExpensesTableConteiner } from \"./DashboardIncomeExpenses.styled\";\n\nexport default function DashboardIncomeExpenses() {  \n  // const dispatch = useDispatch();\n  // const data = useSelector(selectDataInf);  \n\n  // useEffect(() => {\n  //   dispatch(dashboardInf());\n  // }, [dispatch]);\n\n  // console.log(data)\n\n  const data = [\n    // Предполагаем, что каждый массив - это строка данных\n    [\"Error\", \"Qonto billing\", \"-49.88\"],\n    [\"Данные ячейки 11\", \"Данные ячейки 22\", \"333\"],\n    [\"Данные ячейки 111\", \"Данные ячейки 222\", \"44444444\"],\n    [\"Данные ячейки 1\", \"Данные ячейки 2\", \"77777777777777\"],\n    [\"Данные ячейки 11\", \"Данные ячейки 22\", \"8888\"],\n    [\"Данные ячейки 111\", \"Данные ячейки 222\", \"000\"],\n  ];\n\n  return (\n    <TableBlockItem>\n      <TableHeader>Income/Expenses</TableHeader>\n      <IncomeExpensesTableConteiner>\n        <Table2 \n          numRows={data.length} \n          defaultRowHeight={65} \n          columnWidths={[120, 393, 77 ]} \n          enableColumnResizing={false} \n          enableRowResizing={false} \n          enableRowHeader={false}\n        >\n          <Column name=\"Today\" cellRenderer={(rowIndex) => <Cell>{data[rowIndex][0]}</Cell>} />\n          <Column name=\"\" cellRenderer={(rowIndex) => <Cell>{data[rowIndex][1]}</Cell>} />\n          <Column name=\"\" cellRenderer={(rowIndex) => <Cell>{data[rowIndex][2]}</Cell>} />\n        </Table2>\n      </IncomeExpensesTableConteiner>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n\nexport const HeaderStyle = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\n/* border: none;\nbox-shadow: none;  */\n\n  .bp5-table-header {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 58px;\n    background-color: ${color.white}; \n    padding-left: 10px;\n\n    font-size: 14px;  \n    font-weight: 500;\n    color: ${color.textColorSecondary};\n    box-shadow: none; //\n    border-bottom: 1px solid ${color.blackPrimarySecondary}\n  }\n\n  .bp5-table-header:not(:last-child)::after {\n    content: ''; \n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0; \n    border-right: 1px solid ${color.blackPrimarySecondary}; \n  }\n  \n\n\n\n\n\n  .bp5-table-container {    \n    box-shadow: none;    \n  }\n\n .bp5-table-cell { \n  display: flex;\n  align-items: center;\n  background: ${color.white};\n  padding-left: 20px;\n  box-shadow: none; //\n  border-bottom: 1px solid ${color.blackPrimarySecondary}\n}\n\n\n`\n","// import { selectDataInf } from '../../redux/ePharmacy/selector';\n// import { useEffect } from 'react';\n// import { dashboardInf } from '../../redux/ePharmacy/operations';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { HotkeysProvider } from \"@blueprintjs/core\";\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\nimport { HeaderStyle } from \"./DashboardRecentCustomers.styled\";\nimport { TableHeader } from \"common/GiobalStyles\";\nimport color from \"common/GlobalColers\";\n\n\nexport default function DashboardRecentCustomers() {  \n  // const dispatch = useDispatch();\n  // const data = useSelector(selectDataInf);  \n\n  // useEffect(() => {\n  //   dispatch(dashboardInf());\n  // }, [dispatch]);\n\n  // console.log(data)\n  const data = [\n    // Предполагаем, что каждый массив - это строка данных\n    [\"Alex Shatov\", \"alexshatov@gmail.com\", \"2,890.66\"],\n    [\"Данные ячейки 11\", \"Данные ячейки 22\", \"2222222\"],\n    [\"Данные ячейки 111\", \"Данные ячейки 222\", \"3333333\"],\n    [\"Данные ячейки 4\", \"Данные ячейки 5\", \"4444444\"],\n    [\"Данные ячейки 7\", \"Данные ячейки 8\", \"5555555\"],\n  ];\n\n\n  const customCellRenderer = (rowIndex, columnId, data) => {\n    // Проверяем, принадлежит ли текущая ячейка к столбцу \"Name\" или \"Email\"\n    const isSpecialColumn = columnId === 'name' || columnId === 'email';\n  \n    return (\n      <Cell style={isSpecialColumn ? {borderRight: `1px solid ${color.blackPrimarySecondary}`} : undefined}>\n        {data[rowIndex]}\n      </Cell>\n    );\n  };\n  return (    \n    <TableBlockItem>      \n      <TableHeader>Recent Customers</TableHeader>\n     \n      <HeaderStyle >\n      <Table2  \n        numRows={data.length} \n        defaultRowHeight={78} \n        columnWidths={[203, 269, 118 ]} \n        enableColumnResizing={false} \n        enableRowResizing={false} \n        enableRowHeader={false}\n      >\n  <Column name=\"Name\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'name', data.map(item => item[0]))} />\n  <Column name=\"Email\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'email', data.map(item => item[1]))} />\n  <Column name=\"Spent\" cellRenderer={(rowIndex) => customCellRenderer(rowIndex, 'spent', data.map(item => item[2]))} />\n      </Table2>\n      </HeaderStyle>\n    </TableBlockItem>\n  )\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StatisticConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const StatisticItem  = styled.li`\n  width: 240px;\n  height: 108px;\n  border-radius: 8px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  padding: 14px 18px;\n\n\n  fill: transparent;\n  stroke: ${color.blackPrimary};\n  &:first-child {\n    border-color: ${color.greenLight};\n  }\n`\nexport const StatisticTitleConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 28px;\n  \n`\n\nexport const StatisticSectionTitle = styled.h4`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.textColorSecondary};\n  \n`\nexport const StatisticValue = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.33;\n  \n`","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\n// export const selectTakeWaterHistory = (state) => state.water.history;\n\n// export const selectStageWater = (state) => state.water;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { StatisticConteiner, StatisticItem, StatisticSectionTitle, StatisticTitleConteiner, StatisticValue } from './DashboardStatistic.styled';\nimport { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\n\nexport default function DashboardStatistic() {  \n  const dispatch = useDispatch();\n  const data = useSelector(selectDataInf);\n  \n  const statistic = [\n    { name: \"products\", icon: \"#icon-streamline\", value: `${data.productsCount}` },\n    { name: \"suppliers\", icon: \"#icon-users\", value: `${data.suppliersCount}` },\n    { name: \"customers\", icon: \"#icon-users\", value: `${data.customersCount}` },\n  ];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  return (\n    <StatisticConteiner>\n      {statistic.map(link => (        \n        <StatisticItem key={link.name} >\n          <StatisticTitleConteiner>\n            <svg width={20} height={20}>\n              <use href={`${sprite}${link.icon}`} />\n            </svg>\n            <StatisticSectionTitle>All {link.name}</StatisticSectionTitle>\n          </StatisticTitleConteiner>\n          <StatisticValue>{data.customersCount ? link.value : 0}</StatisticValue>\n        </StatisticItem>\n      ))}\n    </StatisticConteiner>\n  );\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport DashboardIncomeExpenses from \"components/DashboardIncomeExpenses/DashboardIncomeExpenses\";\nimport DashboardRecentCustomers from \"components/DashboardRecentCustomers/DashboardRecentCustomers\";\nimport DashboardStatistic from \"components/DashboardStatistic/DashboardStatistic\";\nimport { TableConteiner } from \"./Dashboard.styled\";\n\n\nexport default function Dashboard() {  \n\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <DashboardStatistic />\n\n        <TableConteiner>\n          <DashboardRecentCustomers />\n          <DashboardIncomeExpenses />\n        </TableConteiner>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Dashboard from \"components/Dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return (\n    <Dashboard />\n  );\n}  "],"names":["TableConteiner","styled","_templateObject","_taggedTemplateLiteral","TableBlockItem","_templateObject2","color","IncomeExpensesTableConteiner","DashboardIncomeExpenses","data","_jsxs","children","_jsx","TableHeader","Table2","numRows","length","defaultRowHeight","columnWidths","enableColumnResizing","enableRowResizing","enableRowHeader","Column","name","cellRenderer","rowIndex","Cell","HeaderStyle","DashboardRecentCustomers","customCellRenderer","columnId","isSpecialColumn","style","borderRight","concat","undefined","map","item","StatisticConteiner","StatisticItem","StatisticTitleConteiner","_templateObject3","StatisticSectionTitle","_templateObject4","StatisticValue","_templateObject5","selectDataInf","state","pharmacy","dashboarData","DashboardStatistic","dispatch","useDispatch","useSelector","statistic","icon","value","productsCount","suppliersCount","customersCount","useEffect","dashboardInf","link","width","height","href","sprite","Dashboard","ContentContainer","ContentBlock","DashboardPage"],"sourceRoot":""}