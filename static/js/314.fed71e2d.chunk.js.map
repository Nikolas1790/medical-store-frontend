{"version":3,"file":"static/js/314.fed71e2d.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.js","components/DashboardIncomeExpenses/DashboardIncomeExpenses.jsx","components/DashboardRecentCustomers/DashboardRecentCustomers.jsx","components/DashboardStatistic/DashboardStatistic.styled.js","redux/ePharmacy/selector.js","components/DashboardStatistic/DashboardStatistic.jsx","components/Dashboard/Dashboard.jsx","pages/DashboardPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const  TableConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const  TableBlockItem = styled.div`\n  width: 630px;\n  height: 512px;\n  /* background: green; */\n`","// import { selectDataInf } from '../../redux/ePharmacy/selector';\n// import { useEffect } from 'react';\n// import { dashboardInf } from '../../redux/ePharmacy/operations';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\n\nexport default function DashboardIncomeExpenses() {  \n  // const dispatch = useDispatch();\n  // const data = useSelector(selectDataInf);  \n\n  // useEffect(() => {\n  //   dispatch(dashboardInf());\n  // }, [dispatch]);\n\n  // console.log(data)\n\n  const data = [\n    // Предполагаем, что каждый массив - это строка данных\n    [\"Данные ячейки 1\", \"Данные ячейки 2\", \"Данные ячейки 3\"],\n    [\"Данные ячейки 11\", \"Данные ячейки 22\", \"Данные ячейки 33\"],\n    [\"Данные ячейки 111\", \"Данные ячейки 222\", \"Данные ячейки 333\"],\n  ];\n\n  return (\n    <TableBlockItem>\n    <Table numRows={data.length} resizable={false}>\n      <Column name=\"Название столбца 1\" cellRenderer={(rowIndex) => <Cell>{data[rowIndex][0]}</Cell>} />\n      <Column name=\"Название столбца 2\" cellRenderer={(rowIndex) => <Cell>{data[rowIndex][1]}</Cell>} />\n      <Column name=\"Название столбца 3\" cellRenderer={(rowIndex) => <Cell>{data[rowIndex][2]}</Cell>} />\n    </Table>\n    </TableBlockItem>\n  )\n}","// import { selectDataInf } from '../../redux/ePharmacy/selector';\n// import { useEffect } from 'react';\n// import { dashboardInf } from '../../redux/ePharmacy/operations';\n// import { useDispatch, useSelector } from 'react-redux';\n\nimport { TableBlockItem } from \"components/Dashboard/Dashboard.styled\";\n\nexport default function DashboardRecentCustomers() {  \n  // const dispatch = useDispatch();\n  // const data = useSelector(selectDataInf);  \n\n  // useEffect(() => {\n  //   dispatch(dashboardInf());\n  // }, [dispatch]);\n\n  // console.log(data)\n  \n  return (\n    <TableBlockItem>\n      DashboardRecentCustomers\n    </TableBlockItem>\n  );\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StatisticConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n`\n\nexport const StatisticItem  = styled.li`\n  width: 240px;\n  height: 108px;\n  border-radius: 8px;\n  background: ${color.white};\n  border: 1px solid ${color.blackPrimarySecondary};\n  padding: 14px 18px;\n\n\n  fill: transparent;\n  stroke: ${color.blackPrimary};\n  &:first-child {\n    border-color: ${color.greenLight};\n  }\n`\nexport const StatisticTitleConteiner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 28px;\n  \n`\n\nexport const StatisticSectionTitle = styled.h4`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${color.textColorSecondary};\n  \n`\nexport const StatisticValue = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.33;\n  \n`","export const selectDataInf = (state) => state.pharmacy.dashboarData;\n\n// export const selectTakeWaterHistory = (state) => state.water.history;\n\n// export const selectStageWater = (state) => state.water;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { StatisticConteiner, StatisticItem, StatisticSectionTitle, StatisticTitleConteiner, StatisticValue } from './DashboardStatistic.styled';\nimport { selectDataInf } from '../../redux/ePharmacy/selector';\nimport { useEffect } from 'react';\nimport { dashboardInf } from '../../redux/ePharmacy/operations';\n\nexport default function DashboardStatistic() {  \n  const dispatch = useDispatch();\n  const data = useSelector(selectDataInf);\n  \n  const statistic = [\n    { name: \"products\", icon: \"#icon-streamline\", value: `${data.productsCount}` },\n    { name: \"suppliers\", icon: \"#icon-users\", value: `${data.suppliersCount}` },\n    { name: \"customers\", icon: \"#icon-users\", value: `${data.customersCount}` },\n  ];\n  useEffect(() => {\n    dispatch(dashboardInf());\n  }, [dispatch]);\n\n  return (\n    <StatisticConteiner>\n      {statistic.map(link => (        \n        <StatisticItem key={link.name} >\n          <StatisticTitleConteiner>\n            <svg width={20} height={20}>\n              <use href={`${sprite}${link.icon}`} />\n            </svg>\n            <StatisticSectionTitle>All {link.name}</StatisticSectionTitle>\n          </StatisticTitleConteiner>\n          <StatisticValue>{data.customersCount ? link.value : 0}</StatisticValue>\n        </StatisticItem>\n      ))}\n    </StatisticConteiner>\n  );\n}","import { ContentBlock, ContentContainer } from \"common/GiobalStyles\";\nimport DashboardIncomeExpenses from \"components/DashboardIncomeExpenses/DashboardIncomeExpenses\";\nimport DashboardRecentCustomers from \"components/DashboardRecentCustomers/DashboardRecentCustomers\";\nimport DashboardStatistic from \"components/DashboardStatistic/DashboardStatistic\";\nimport { TableConteiner } from \"./Dashboard.styled\";\n\n\nexport default function Dashboard() {  \n\n  return (\n    <ContentContainer>\n      <ContentBlock>\n        <DashboardStatistic />\n\n        <TableConteiner>\n          <DashboardRecentCustomers />\n          <DashboardIncomeExpenses />\n        </TableConteiner>\n\n      </ContentBlock>\n    </ContentContainer>\n  );\n}","import Dashboard from \"components/Dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return (\n    <Dashboard />\n  );\n}  "],"names":["TableConteiner","styled","_templateObject","_taggedTemplateLiteral","TableBlockItem","_templateObject2","DashboardIncomeExpenses","data","_jsx","children","_jsxs","Table","numRows","length","resizable","Column","name","cellRenderer","rowIndex","Cell","DashboardRecentCustomers","StatisticConteiner","StatisticItem","color","StatisticTitleConteiner","_templateObject3","StatisticSectionTitle","_templateObject4","StatisticValue","_templateObject5","selectDataInf","state","pharmacy","dashboarData","DashboardStatistic","dispatch","useDispatch","useSelector","statistic","icon","value","concat","productsCount","suppliersCount","customersCount","useEffect","dashboardInf","map","link","width","height","href","sprite","Dashboard","ContentContainer","ContentBlock","DashboardPage"],"sourceRoot":""}